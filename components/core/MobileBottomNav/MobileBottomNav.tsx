'use client';

import { usePathname } from 'next/navigation';
import styles from './MobileBottomNav.module.scss';
import clsx from 'clsx';
import { NavigationMenu } from '@base-ui-components/react';
import { Menu } from '@base-ui-components/react/menu';
import Link from 'next/link';
import React, { useEffect, useState } from 'react';
import { useCommonAnalytics } from '@/analytics/common.analytics';
import { IUserInfo } from '@/types/shared.types';
import { getAnalyticsUserInfo } from '@/utils/common.utils';

const TeamsIcon = () => (
  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M15 7C15 7.79565 14.6839 8.55871 14.1213 9.12132C13.5587 9.68393 12.7956 10 12 10C11.2044 10 10.4413 9.68393 9.87868 9.12132C9.31607 8.55871 9 7.79565 9 7C9 6.20435 9.31607 5.44129 9.87868 4.87868C10.4413 4.31607 11.2044 4 12 4C12.7956 4 13.5587 4.31607 14.1213 4.87868C14.6839 5.44129 15 6.20435 15 7ZM20 9C20 9.53043 19.7893 10.0391 19.4142 10.4142C19.0391 10.7893 18.5304 11 18 11C17.4696 11 16.9609 10.7893 16.5858 10.4142C16.2107 10.0391 16 9.53043 16 9C16 8.46957 16.2107 7.96086 16.5858 7.58579C16.9609 7.21071 17.4696 7 18 7C18.5304 7 19.0391 7.21071 19.4142 7.58579C19.7893 7.96086 20 8.46957 20 9ZM16 16C16 14.9391 15.5786 13.9217 14.8284 13.1716C14.0783 12.4214 13.0609 12 12 12C10.9391 12 9.92172 12.4214 9.17157 13.1716C8.42143 13.9217 8 14.9391 8 16V19H16V16ZM8 9C8 9.53043 7.78929 10.0391 7.41421 10.4142C7.03914 10.7893 6.53043 11 6 11C5.46957 11 4.96086 10.7893 4.58579 10.4142C4.21071 10.0391 4 9.53043 4 9C4 8.46957 4.21071 7.96086 4.58579 7.58579C4.96086 7.21071 5.46957 7 6 7C6.53043 7 7.03914 7.21071 7.41421 7.58579C7.78929 7.96086 8 8.46957 8 9ZM18 19V16C18.0014 14.9833 17.7433 13.983 17.25 13.094C17.6933 12.9805 18.1568 12.9698 18.6049 13.0627C19.053 13.1556 19.474 13.3496 19.8357 13.6299C20.1974 13.9102 20.4903 14.2695 20.6921 14.6802C20.8939 15.091 20.9992 15.5424 21 16V19H18ZM6.75 13.094C6.25675 13.983 5.9986 14.9833 6 16V19H3V16C2.99981 15.542 3.10446 15.0901 3.30595 14.6789C3.50743 14.2676 3.80039 13.9079 4.16238 13.6274C4.52437 13.3469 4.94578 13.153 5.39431 13.0605C5.84284 12.9681 6.30658 12.9795 6.75 13.094Z"
      fill="currentColor"
    />
  </svg>
);

const MembersIcon = () => (
  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M12 10C12.7956 10 13.5587 9.68393 14.1213 9.12132C14.6839 8.55871 15 7.79565 15 7C15 6.20435 14.6839 5.44129 14.1213 4.87868C13.5587 4.31607 12.7956 4 12 4C11.2044 4 10.4413 4.31607 9.87868 4.87868C9.31607 5.44129 9 6.20435 9 7C9 7.79565 9.31607 8.55871 9.87868 9.12132C10.4413 9.68393 11.2044 10 12 10ZM5 19C5 18.0807 5.18106 17.1705 5.53284 16.3212C5.88463 15.4719 6.40024 14.7003 7.05025 14.0503C7.70026 13.4002 8.47194 12.8846 9.32122 12.5328C10.1705 12.1811 11.0807 12 12 12C12.9193 12 13.8295 12.1811 14.6788 12.5328C15.5281 12.8846 16.2997 13.4002 16.9497 14.0503C17.5998 14.7003 18.1154 15.4719 18.4672 16.3212C18.8189 17.1705 19 18.0807 19 19H5Z"
      fill="currentColor"
    />
  </svg>
);

const ProjectsIcon = () => (
  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M15 12.2992V7.70078C15.0004 7.52335 14.9543 7.34892 14.8663 7.19486C14.7783 7.04079 14.6515 6.91246 14.4984 6.82266L10.4875 4.50625C10.3393 4.42068 10.1711 4.37562 10 4.37562C9.82885 4.37562 9.66072 4.42068 9.5125 4.50625L5.50234 6.82266C5.34918 6.91236 5.2222 7.04065 5.13406 7.19472C5.04592 7.34879 4.99969 7.52328 5 7.70078V12.2992C4.99961 12.4766 5.04572 12.6511 5.13372 12.8051C5.22172 12.9592 5.34854 13.0875 5.50156 13.1773L9.5125 15.4938C9.66074 15.5792 9.82887 15.6243 10 15.6243C10.1711 15.6243 10.3393 15.5792 10.4875 15.4938L14.4977 13.1773C14.6508 13.0876 14.7778 12.9594 14.8659 12.8053C14.9541 12.6512 15.0003 12.4767 15 12.2992ZM10 5.66797L13.1711 7.5L10 9.33047L6.82891 7.5L10 5.66797ZM6.25 8.60859L9.375 10.4133V13.9711L6.25 12.1664V8.60859ZM10.625 13.9711V10.4133L13.75 8.60859V12.1664L10.625 13.9711ZM18.125 3.75V6.875C18.125 7.04076 18.0592 7.19973 17.9419 7.31694C17.8247 7.43415 17.6658 7.5 17.5 7.5C17.3342 7.5 17.1753 7.43415 17.0581 7.31694C16.9408 7.19973 16.875 7.04076 16.875 6.875V4.375H14.375C14.2092 4.375 14.0503 4.30915 13.9331 4.19194C13.8158 4.07473 13.75 3.91576 13.75 3.75C13.75 3.58424 13.8158 3.42527 13.9331 3.30806C14.0503 3.19085 14.2092 3.125 14.375 3.125H17.5C17.6658 3.125 17.8247 3.19085 17.9419 3.30806C18.0592 3.42527 18.125 3.58424 18.125 3.75ZM6.25 16.25C6.25 16.4158 6.18415 16.5747 6.06694 16.6919C5.94973 16.8092 5.79076 16.875 5.625 16.875H2.5C2.33424 16.875 2.17527 16.8092 2.05806 16.6919C1.94085 16.5747 1.875 16.4158 1.875 16.25V13.125C1.875 12.9592 1.94085 12.8003 2.05806 12.6831C2.17527 12.5658 2.33424 12.5 2.5 12.5C2.66576 12.5 2.82473 12.5658 2.94194 12.6831C3.05915 12.8003 3.125 12.9592 3.125 13.125V15.625H5.625C5.79076 15.625 5.94973 15.6908 6.06694 15.8081C6.18415 15.9253 6.25 16.0842 6.25 16.25ZM18.125 13.125V16.25C18.125 16.4158 18.0592 16.5747 17.9419 16.6919C17.8247 16.8092 17.6658 16.875 17.5 16.875H14.375C14.2092 16.875 14.0503 16.8092 13.9331 16.6919C13.8158 16.5747 13.75 16.4158 13.75 16.25C13.75 16.0842 13.8158 15.9253 13.9331 15.8081C14.0503 15.6908 14.2092 15.625 14.375 15.625H16.875V13.125C16.875 12.9592 16.9408 12.8003 17.0581 12.6831C17.1753 12.5658 17.3342 12.5 17.5 12.5C17.6658 12.5 17.8247 12.5658 17.9419 12.6831C18.0592 12.8003 18.125 12.9592 18.125 13.125ZM1.875 6.875V3.75C1.875 3.58424 1.94085 3.42527 2.05806 3.30806C2.17527 3.19085 2.33424 3.125 2.5 3.125H5.625C5.79076 3.125 5.94973 3.19085 6.06694 3.30806C6.18415 3.42527 6.25 3.58424 6.25 3.75C6.25 3.91576 6.18415 4.07473 6.06694 4.19194C5.94973 4.30915 5.79076 4.375 5.625 4.375H3.125V6.875C3.125 7.04076 3.05915 7.19973 2.94194 7.31694C2.82473 7.43415 2.66576 7.5 2.5 7.5C2.33424 7.5 2.17527 7.43415 2.05806 7.31694C1.94085 7.19973 1.875 7.04076 1.875 6.875Z"
      fill="#455468"
    />
  </svg>
);

const FundraisingIcon = () => (
  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M19.375 10C19.3757 9.28224 19.1997 8.57535 18.8627 7.94164C18.5257 7.30793 18.0379 6.76688 17.4424 6.36618C16.8469 5.96548 16.162 5.71745 15.448 5.64395C14.734 5.57045 14.0129 5.67375 13.3483 5.94472C12.6836 6.2157 12.0959 6.64604 11.6368 7.1978C11.1778 7.74956 10.8615 8.40579 10.7159 9.10862C10.5704 9.81146 10.5999 10.5393 10.8021 11.228C11.0042 11.9167 11.3727 12.5451 11.875 13.0578V17.5C11.8749 17.6066 11.9021 17.7114 11.954 17.8046C12.0058 17.8977 12.0807 17.976 12.1713 18.032C12.262 18.0881 12.3655 18.12 12.4719 18.1248C12.5784 18.1296 12.6844 18.1071 12.7797 18.0594L15 16.9484L17.2203 18.0594C17.3156 18.1071 17.4216 18.1296 17.5281 18.1248C17.6345 18.12 17.738 18.0881 17.8287 18.032C17.9193 17.976 17.9942 17.8977 18.046 17.8046C18.0979 17.7114 18.1251 17.6066 18.125 17.5V13.0578C18.9266 12.2419 19.3755 11.1438 19.375 10ZM15 6.875C15.6181 6.875 16.2223 7.05828 16.7362 7.40166C17.2501 7.74504 17.6506 8.2331 17.8871 8.80411C18.1236 9.37513 18.1855 10.0035 18.065 10.6097C17.9444 11.2158 17.6467 11.7727 17.2097 12.2097C16.7727 12.6467 16.2158 12.9444 15.6097 13.065C15.0035 13.1855 14.3751 13.1236 13.8041 12.8871C13.2331 12.6506 12.745 12.2501 12.4017 11.7362C12.0583 11.2223 11.875 10.6181 11.875 10C11.875 9.1712 12.2042 8.37634 12.7903 7.79029C13.3763 7.20424 14.1712 6.875 15 6.875ZM15.2797 15.6906C15.1929 15.6472 15.0971 15.6246 15 15.6246C14.9029 15.6246 14.8071 15.6472 14.7203 15.6906L13.125 16.4891V13.9523C13.7109 14.2306 14.3514 14.375 15 14.375C15.6486 14.375 16.2891 14.2306 16.875 13.9523V16.4891L15.2797 15.6906ZM10.625 15C10.625 15.1658 10.5592 15.3247 10.4419 15.4419C10.3247 15.5592 10.1658 15.625 10 15.625H3.125C2.79348 15.625 2.47554 15.4933 2.24112 15.2589C2.0067 15.0245 1.875 14.7065 1.875 14.375V4.375C1.875 4.04348 2.0067 3.72554 2.24112 3.49112C2.47554 3.2567 2.79348 3.125 3.125 3.125H16.875C17.2065 3.125 17.5245 3.2567 17.7589 3.49112C17.9933 3.72554 18.125 4.04348 18.125 4.375C18.125 4.54076 18.0592 4.69973 17.9419 4.81694C17.8247 4.93415 17.6658 5 17.5 5C17.3342 5 17.1753 4.93415 17.0581 4.81694C16.9408 4.69973 16.875 4.54076 16.875 4.375H3.125V14.375H10C10.1658 14.375 10.3247 14.4408 10.4419 14.5581C10.5592 14.6753 10.625 14.8342 10.625 15ZM9.375 10.625C9.375 10.7908 9.30915 10.9497 9.19194 11.0669C9.07473 11.1842 8.91576 11.25 8.75 11.25H5.625C5.45924 11.25 5.30027 11.1842 5.18306 11.0669C5.06585 10.9497 5 10.7908 5 10.625C5 10.4592 5.06585 10.3003 5.18306 10.1831C5.30027 10.0658 5.45924 10 5.625 10H8.75C8.91576 10 9.07473 10.0658 9.19194 10.1831C9.30915 10.3003 9.375 10.4592 9.375 10.625ZM9.375 8.125C9.375 8.29076 9.30915 8.44973 9.19194 8.56694C9.07473 8.68415 8.91576 8.75 8.75 8.75H5.625C5.45924 8.75 5.30027 8.68415 5.18306 8.56694C5.06585 8.44973 5 8.29076 5 8.125C5 7.95924 5.06585 7.80027 5.18306 7.68306C5.30027 7.56585 5.45924 7.5 5.625 7.5H8.75C8.91576 7.5 9.07473 7.56585 9.19194 7.68306C9.30915 7.80027 9.375 7.95924 9.375 8.125Z"
      fill="#455468"
    />
  </svg>
);

const DemoIcon = () => (
  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M16.25 2.5H14.375V1.875C14.375 1.70924 14.3092 1.55027 14.1919 1.43306C14.0747 1.31585 13.9158 1.25 13.75 1.25C13.5842 1.25 13.4253 1.31585 13.3081 1.43306C13.1908 1.55027 13.125 1.70924 13.125 1.875V2.5H6.875V1.875C6.875 1.70924 6.80915 1.55027 6.69194 1.43306C6.57473 1.31585 6.41576 1.25 6.25 1.25C6.08424 1.25 5.92527 1.31585 5.80806 1.43306C5.69085 1.55027 5.625 1.70924 5.625 1.875V2.5H3.75C3.41848 2.5 3.10054 2.6317 2.86612 2.86612C2.6317 3.10054 2.5 3.41848 2.5 3.75V16.25C2.5 16.5815 2.6317 16.8995 2.86612 17.1339C3.10054 17.3683 3.41848 17.5 3.75 17.5H16.25C16.5815 17.5 16.8995 17.3683 17.1339 17.1339C17.3683 16.8995 17.5 16.5815 17.5 16.25V3.75C17.5 3.41848 17.3683 3.10054 17.1339 2.86612C16.8995 2.6317 16.5815 2.5 16.25 2.5ZM16.25 16.25H3.75V3.75H5.625V4.375C5.625 4.54076 5.69085 4.69973 5.80806 4.81694C5.92527 4.93415 6.08424 5 6.25 5C6.41576 5 6.57473 4.93415 6.69194 4.81694C6.80915 4.69973 6.875 4.54076 6.875 4.375V3.75H13.125V4.375C13.125 4.54076 13.1908 4.69973 13.3081 4.81694C13.4253 4.93415 13.5842 5 13.75 5C13.9158 5 14.0747 4.93415 14.1919 4.81694C14.3092 4.69973 14.375 4.54076 14.375 4.375V3.75H16.25V16.25ZM13.7984 8.87812L11.4672 8.69766L10.5742 6.62734C10.526 6.51506 10.4459 6.41939 10.3438 6.35217C10.2417 6.28495 10.1222 6.24912 10 6.24912C9.87779 6.24912 9.75826 6.28495 9.6562 6.35217C9.55415 6.41939 9.47403 6.51506 9.42578 6.62734L8.53281 8.69766L6.20156 8.87812C6.0775 8.8879 5.95918 8.9345 5.86176 9.01194C5.76434 9.08938 5.69225 9.19414 5.65474 9.3128C5.61723 9.43147 5.616 9.55862 5.6512 9.67799C5.68641 9.79736 5.75644 9.9035 5.85234 9.98281L7.61172 11.4352L7.07578 13.6C7.0464 13.7194 7.05287 13.8447 7.09439 13.9604C7.1359 14.0761 7.2106 14.177 7.30916 14.2505C7.40772 14.324 7.52575 14.3667 7.64849 14.3734C7.77123 14.3802 7.89323 14.3505 7.99922 14.2883L10 13.1109L12.0008 14.2883C12.1068 14.3505 12.2288 14.3802 12.3515 14.3734C12.4742 14.3667 12.5923 14.324 12.6908 14.2505C12.7894 14.177 12.8641 14.0761 12.9056 13.9604C12.9471 13.8447 12.9536 13.7194 12.9242 13.6L12.3883 11.4352L14.1477 9.98281C14.2436 9.9035 14.3136 9.79736 14.3488 9.67799C14.384 9.55862 14.3828 9.43147 14.3453 9.3128C14.3077 9.19414 14.2357 9.08938 14.1382 9.01194C14.0408 8.9345 13.9225 8.8879 13.7984 8.87812ZM11.2898 10.7219C11.1989 10.7968 11.131 10.8959 11.094 11.0077C11.0569 11.1195 11.0523 11.2395 11.0805 11.3539L11.3539 12.457L10.3172 11.8469C10.2211 11.7903 10.1116 11.7604 10 11.7604C9.88845 11.7604 9.77893 11.7903 9.68281 11.8469L8.64609 12.457L8.91953 11.3539C8.94774 11.2395 8.94306 11.1195 8.90601 11.0077C8.86897 10.8959 8.80107 10.7968 8.71016 10.7219L7.84219 10.0047L9.00547 9.91484C9.11895 9.90613 9.22789 9.8666 9.32055 9.80052C9.41321 9.73443 9.48606 9.6443 9.53125 9.53984L10 8.45234L10.4688 9.53984C10.5139 9.6443 10.5868 9.73443 10.6795 9.80052C10.7721 9.8666 10.8811 9.90613 10.9945 9.91484L12.1578 10.0047L11.2898 10.7219Z"
      fill="#455468"
    />
  </svg>
);

const MoreIcon = () => (
  <svg width="18" height="19" viewBox="0 0 18 19" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g filter="url(#filter0_d_7102_15954)">
      <path
        d="M5.48438 2.53125C4.9003 2.53125 4.32935 2.70445 3.84371 3.02894C3.35807 3.35344 2.97956 3.81465 2.75604 4.35426C2.53253 4.89388 2.47405 5.48765 2.58799 6.0605C2.70194 6.63335 2.9832 7.15955 3.3962 7.57255C3.8092 7.98555 4.3354 8.26681 4.90825 8.38076C5.4811 8.49471 6.07488 8.43622 6.61449 8.21271C7.1541 7.98919 7.61532 7.61068 7.93981 7.12504C8.2643 6.63941 8.4375 6.06845 8.4375 5.48438C8.4375 4.70116 8.12637 3.95002 7.57255 3.3962C7.01873 2.84238 6.26759 2.53125 5.48438 2.53125ZM5.48438 6.75C5.23406 6.75 4.98936 6.67577 4.78123 6.53671C4.5731 6.39764 4.41088 6.19997 4.31509 5.96871C4.2193 5.73745 4.19424 5.48297 4.24307 5.23747C4.2919 4.99196 4.41244 4.76645 4.58944 4.58944C4.76645 4.41244 4.99196 4.2919 5.23747 4.24307C5.48297 4.19424 5.73745 4.2193 5.96871 4.31509C6.19997 4.41088 6.39764 4.5731 6.53671 4.78123C6.67577 4.98936 6.75 5.23406 6.75 5.48438C6.75 5.82004 6.61666 6.14196 6.37931 6.37931C6.14196 6.61666 5.82004 6.75 5.48438 6.75ZM12.5156 8.4375C13.0997 8.4375 13.6707 8.2643 14.1563 7.93981C14.6419 7.61532 15.0204 7.1541 15.244 6.61449C15.4675 6.07488 15.526 5.4811 15.412 4.90825C15.2981 4.3354 15.0168 3.8092 14.6038 3.3962C14.1908 2.9832 13.6646 2.70194 13.0918 2.58799C12.5189 2.47405 11.9251 2.53253 11.3855 2.75604C10.8459 2.97956 10.3847 3.35807 10.0602 3.84371C9.7357 4.32935 9.5625 4.9003 9.5625 5.48438C9.5625 6.26759 9.87363 7.01873 10.4275 7.57255C10.9813 8.12637 11.7324 8.4375 12.5156 8.4375ZM12.5156 4.21875C12.7659 4.21875 13.0106 4.29298 13.2188 4.43205C13.4269 4.57112 13.5891 4.76878 13.6849 5.00004C13.7807 5.23131 13.8058 5.48578 13.7569 5.73129C13.7081 5.9768 13.5876 6.20231 13.4106 6.37931C13.2336 6.55631 13.008 6.67685 12.7625 6.72568C12.517 6.77452 12.2626 6.74945 12.0313 6.65366C11.8 6.55787 11.6024 6.39565 11.4633 6.18752C11.3242 5.97939 11.25 5.73469 11.25 5.48438C11.25 5.14871 11.3833 4.8268 11.6207 4.58944C11.858 4.35209 12.18 4.21875 12.5156 4.21875ZM5.48438 9.5625C4.9003 9.5625 4.32935 9.7357 3.84371 10.0602C3.35807 10.3847 2.97956 10.8459 2.75604 11.3855C2.53253 11.9251 2.47405 12.5189 2.58799 13.0918C2.70194 13.6646 2.9832 14.1908 3.3962 14.6038C3.8092 15.0168 4.3354 15.2981 4.90825 15.412C5.4811 15.526 6.07488 15.4675 6.61449 15.244C7.1541 15.0204 7.61532 14.6419 7.93981 14.1563C8.2643 13.6707 8.4375 13.0997 8.4375 12.5156C8.4375 11.7324 8.12637 10.9813 7.57255 10.4275C7.01873 9.87363 6.26759 9.5625 5.48438 9.5625ZM5.48438 13.7813C5.23406 13.7813 4.98936 13.707 4.78123 13.568C4.5731 13.4289 4.41088 13.2312 4.31509 13C4.2193 12.7687 4.19424 12.5142 4.24307 12.2687C4.2919 12.0232 4.41244 11.7977 4.58944 11.6207C4.76645 11.4437 4.99196 11.3232 5.23747 11.2743C5.48297 11.2255 5.73745 11.2505 5.96871 11.3463C6.19997 11.4421 6.39764 11.6044 6.53671 11.8125C6.67577 12.0206 6.75 12.2653 6.75 12.5156C6.75 12.8513 6.61666 13.1732 6.37931 13.4106C6.14196 13.6479 5.82004 13.7813 5.48438 13.7813ZM15.4688 12.5156C15.4688 12.7394 15.3799 12.954 15.2216 13.1122C15.0634 13.2705 14.8488 13.3594 14.625 13.3594H13.3594V14.625C13.3594 14.8488 13.2705 15.0634 13.1122 15.2216C12.954 15.3799 12.7394 15.4688 12.5156 15.4688C12.2919 15.4688 12.0772 15.3799 11.919 15.2216C11.7608 15.0634 11.6719 14.8488 11.6719 14.625V13.3594H10.4063C10.1825 13.3594 9.96786 13.2705 9.80963 13.1122C9.6514 12.954 9.5625 12.7394 9.5625 12.5156C9.5625 12.2919 9.6514 12.0772 9.80963 11.919C9.96786 11.7608 10.1825 11.6719 10.4063 11.6719H11.6719V10.4063C11.6719 10.1825 11.7608 9.96786 11.919 9.80963C12.0772 9.6514 12.2919 9.5625 12.5156 9.5625C12.7394 9.5625 12.954 9.6514 13.1122 9.80963C13.2705 9.96786 13.3594 10.1825 13.3594 10.4063V11.6719H14.625C14.8488 11.6719 15.0634 11.7608 15.2216 11.919C15.3799 12.0772 15.4688 12.2919 15.4688 12.5156Z"
        fill="#455468"
      />
    </g>
    <defs>
      <filter id="filter0_d_7102_15954" x="-2" y="-1" width="22" height="22" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
        <feFlood floodOpacity="0" result="BackgroundImageFix" />
        <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
        <feOffset dy="1" />
        <feGaussianBlur stdDeviation="1" />
        <feComposite in2="hardAlpha" operator="out" />
        <feColorMatrix type="matrix" values="0 0 0 0 0.054902 0 0 0 0 0.0588235 0 0 0 0 0.0666667 0 0 0 0.06 0" />
        <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_7102_15954" />
        <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_7102_15954" result="shape" />
      </filter>
    </defs>
  </svg>
);

const EventsIcon = () => (
  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M19.5 3H17.25V2.25C17.25 2.05109 17.171 1.86032 17.0303 1.71967C16.8897 1.57902 16.6989 1.5 16.5 1.5C16.3011 1.5 16.1103 1.57902 15.9697 1.71967C15.829 1.86032 15.75 2.05109 15.75 2.25V3H8.25V2.25C8.25 2.05109 8.17098 1.86032 8.03033 1.71967C7.88968 1.57902 7.69891 1.5 7.5 1.5C7.30109 1.5 7.11032 1.57902 6.96967 1.71967C6.82902 1.86032 6.75 2.05109 6.75 2.25V3H4.5C4.10218 3 3.72064 3.15804 3.43934 3.43934C3.15804 3.72064 3 4.10218 3 4.5V19.5C3 19.8978 3.15804 20.2794 3.43934 20.5607C3.72064 20.842 4.10218 21 4.5 21H19.5C19.8978 21 20.2794 20.842 20.5607 20.5607C20.842 20.2794 21 19.8978 21 19.5V4.5C21 4.10218 20.842 3.72064 20.5607 3.43934C20.2794 3.15804 19.8978 3 19.5 3ZM6.75 4.5V5.25C6.75 5.44891 6.82902 5.63968 6.96967 5.78033C7.11032 5.92098 7.30109 6 7.5 6C7.69891 6 7.88968 5.92098 8.03033 5.78033C8.17098 5.63968 8.25 5.44891 8.25 5.25V4.5H15.75V5.25C15.75 5.44891 15.829 5.63968 15.9697 5.78033C16.1103 5.92098 16.3011 6 16.5 6C16.6989 6 16.8897 5.92098 17.0303 5.78033C17.171 5.63968 17.25 5.44891 17.25 5.25V4.5H19.5V7.5H4.5V4.5H6.75ZM19.5 19.5H4.5V9H19.5V19.5ZM10.5 11.25V17.25C10.5 17.4489 10.421 17.6397 10.2803 17.7803C10.1397 17.921 9.94891 18 9.75 18C9.55109 18 9.36032 17.921 9.21967 17.7803C9.07902 17.6397 9 17.4489 9 17.25V12.4631L8.58563 12.6713C8.4076 12.7603 8.2015 12.7749 8.01268 12.712C7.82385 12.649 7.66776 12.5137 7.57875 12.3356C7.48974 12.1576 7.47509 11.9515 7.53803 11.7627C7.60097 11.5739 7.73635 11.4178 7.91437 11.3287L9.41437 10.5787C9.52876 10.5215 9.65589 10.4945 9.78367 10.5002C9.91145 10.506 10.0356 10.5443 10.1444 10.6116C10.2532 10.6788 10.343 10.7728 10.4052 10.8845C10.4675 10.9963 10.5001 11.1221 10.5 11.25ZM16.0463 14.1047L14.25 16.5H15.75C15.9489 16.5 16.1397 16.579 16.2803 16.7197C16.421 16.8603 16.5 17.0511 16.5 17.25C16.5 17.4489 16.421 17.6397 16.2803 17.7803C16.1397 17.921 15.9489 18 15.75 18H12.75C12.6107 18 12.4742 17.9612 12.3557 17.888C12.2372 17.8148 12.1415 17.71 12.0792 17.5854C12.0169 17.4608 11.9905 17.3214 12.003 17.1826C12.0155 17.0439 12.0664 16.9114 12.15 16.8L14.8481 13.2028C14.9095 13.1211 14.9535 13.0277 14.9775 12.9284C15.0015 12.8291 15.0049 12.7259 14.9876 12.6252C14.9703 12.5245 14.9325 12.4284 14.8767 12.3428C14.8209 12.2572 14.7482 12.1839 14.6631 12.1274C14.5779 12.0709 14.4821 12.0324 14.3816 12.0143C14.281 11.9961 14.1778 11.9987 14.0783 12.0219C13.9788 12.0451 13.885 12.0884 13.8028 12.1491C13.7206 12.2098 13.6517 12.2867 13.6003 12.375C13.5525 12.463 13.4876 12.5406 13.4093 12.6031C13.3311 12.6656 13.2411 12.7118 13.1447 12.739C13.0483 12.7661 12.9474 12.7737 12.8481 12.7613C12.7487 12.7489 12.6528 12.7166 12.5661 12.6665C12.4794 12.6165 12.4035 12.5495 12.3431 12.4696C12.2827 12.3898 12.2389 12.2986 12.2142 12.2015C12.1896 12.1044 12.1847 12.0034 12.1997 11.9044C12.2148 11.8054 12.2495 11.7104 12.3019 11.625C12.5496 11.1963 12.9319 10.8612 13.3894 10.6718C13.8469 10.4824 14.3541 10.4493 14.8324 10.5774C15.3107 10.7056 15.7333 10.988 16.0348 11.3808C16.3363 11.7736 16.4998 12.2548 16.5 12.75C16.5016 13.2391 16.3421 13.7152 16.0463 14.1047Z"
      fill="currentColor"
    />
  </svg>
);

const ForumIcon = () => (
  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M20.25 7.5H17.25V4.5C17.25 4.10218 17.092 3.72064 16.8107 3.43934C16.5294 3.15804 16.1478 3 15.75 3H3.75C3.35218 3 2.97064 3.15804 2.68934 3.43934C2.40804 3.72064 2.25 4.10218 2.25 4.5V16.5C2.25044 16.6411 2.29068 16.7792 2.36608 16.8985C2.44149 17.0177 2.54901 17.1133 2.67629 17.1742C2.80358 17.2351 2.94546 17.2589 3.08564 17.2428C3.22581 17.2266 3.3586 17.1713 3.46875 17.0831L6.75 14.4375V17.25C6.75 17.6478 6.90804 18.0294 7.18934 18.3107C7.47064 18.592 7.85218 18.75 8.25 18.75H17.0241L20.5312 21.5831C20.664 21.6905 20.8293 21.7493 21 21.75C21.1989 21.75 21.3897 21.671 21.5303 21.5303C21.671 21.3897 21.75 21.1989 21.75 21V9C21.75 8.60218 21.592 8.22064 21.3107 7.93934C21.0294 7.65804 20.6478 7.5 20.25 7.5ZM6.23906 12.9169L3.75 14.9297V4.5H15.75V12.75H6.71063C6.53897 12.75 6.37252 12.8089 6.23906 12.9169ZM20.25 19.4297L17.7609 17.4169C17.6282 17.3095 17.4629 17.2507 17.2922 17.25H8.25V14.25H15.75C16.1478 14.25 16.5294 14.092 16.8107 13.8107C17.092 13.5294 17.25 13.1478 17.25 12.75V9H20.25V19.4297Z"
      fill="currentColor"
    />
  </svg>
);

const otherLinks = [
  {
    icon: <ProjectsIcon />,
    href: '/projects',
    title: 'Projects',
    // description: 'See what the network is building',
    category: 'general',
  },
  {
    icon: <FundraisingIcon />,
    href: '/fundraising/teams',
    title: 'Team Fundraising Profile',
    // description: 'Showcase your team for fundraising opportunities',
    category: 'fundraising',
  },
  {
    icon: <DemoIcon />,
    href: '/fundraising/demo-days',
    title: 'Demo Days',
    // description: 'Present your project to investors and community',
    category: 'fundraising',
  },
] as const;

const navItems = [
  { href: '/members', label: 'Members', icon: MembersIcon },
  { href: '/teams', label: 'Teams', icon: TeamsIcon },
  { href: '/events', label: 'Events', icon: EventsIcon },
  { href: '/forum?cid=0', label: 'Forum', icon: ForumIcon },
];

interface MobileBottomNavProps {
  userInfo?: IUserInfo;
}

export function MobileBottomNav({ userInfo }: MobileBottomNavProps) {
  const pathname = usePathname();
  const scrollDirection = useScrollDirection();
  const analytics = useCommonAnalytics();

  const onNavItemClickHandler = (url: string, name: string) => {
    if (pathname !== url && userInfo) {
      analytics.onNavItemClicked(name, getAnalyticsUserInfo(userInfo));
    }
  };

  return (
    <div
      className={clsx(styles.wrapper, {
        [styles.hidden]: scrollDirection === 'down',
      })}
      id="mobile-bottom-nav"
    >
      <NavigationMenu.Root style={{ width: '100%' }}>
        <NavigationMenu.List className={styles.list}>
          {navItems.map(({ href, label, icon: Icon }) => (
            <NavigationMenu.Item key={href}>
              <Link href={href} className={clsx(styles.item, pathname === href && styles.itemActive)} onClick={() => onNavItemClickHandler(href, label)}>
                <Icon />
                <span>{label}</span>
              </Link>
            </NavigationMenu.Item>
          ))}
          <NavigationMenu.Item>
            <Menu.Root modal={false}>
              <Menu.Trigger className={clsx(styles.item, styles.moreButton)}>
                <MoreIcon />
                <span>More</span>
              </Menu.Trigger>
              <Menu.Portal>
                <Menu.Positioner className={styles.positioner} side="top" align="center" sideOffset={10}>
                  <Menu.Popup className={styles.popup}>
                    {/* General Items */}
                    {otherLinks
                      .filter((item) => item.category === 'general')
                      .map((item) => (
                        <Link key={item.href} href={item.href}>
                          <Menu.Item className={styles.menuItem} onClick={() => onNavItemClickHandler(item.href, item.title)}>
                            {item.icon}
                            <div className={styles.menuItemDetails}>
                              <div className={styles.menuItemTitle}>{item.title}</div>
                              {/*<div className={styles.menuItemDescription}>{item.description}</div>*/}
                            </div>
                          </Menu.Item>
                        </Link>
                      ))}

                    {/* Fundraising Section */}
                    {otherLinks.some((item) => item.category === 'fundraising') && (
                      <>
                        <div className={styles.separatorWrapper}>
                          Fundraising
                          <Menu.Separator className={styles.separator} />
                        </div>
                        {otherLinks
                          .filter((item) => item.category === 'fundraising')
                          .map((item) => (
                            <Link key={item.href} href={item.href}>
                              <Menu.Item className={styles.menuItem} onClick={() => onNavItemClickHandler(item.href, item.title)}>
                                {item.icon}
                                <div className={styles.menuItemDetails}>
                                  <div className={styles.menuItemTitle}>{item.title}</div>
                                  {/*<div className={styles.menuItemDescription}>{item.description}</div>*/}
                                </div>
                              </Menu.Item>
                            </Link>
                          ))}
                      </>
                    )}
                  </Menu.Popup>
                </Menu.Positioner>
              </Menu.Portal>
            </Menu.Root>
          </NavigationMenu.Item>
        </NavigationMenu.List>
      </NavigationMenu.Root>
    </div>
  );
}

export function useScrollDirection(threshold = 100) {
  const [scrollDirection, setScrollDirection] = useState<'up' | 'down'>('up');
  const [lastScrollY, setLastScrollY] = useState(0);

  useEffect(() => {
    const handleScroll = () => {
      const currentScrollY = document.body.scrollTop;

      if (Math.abs(currentScrollY - lastScrollY) < threshold) {
        return;
      }

      if (currentScrollY > lastScrollY) {
        setScrollDirection('down');
      } else {
        setScrollDirection('up');
      }

      setLastScrollY(currentScrollY);
    };

    document.body.addEventListener('scroll', handleScroll);

    return () => window.removeEventListener('scroll', handleScroll);
  }, [lastScrollY]);

  return scrollDirection;
}
