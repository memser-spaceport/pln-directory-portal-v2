'use client';

import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { IUserInfo } from '@/types/shared.types';
import { useUpdateMemberPreferences } from '@/services/members/hooks/useUpdateMemberPreferences';

import s from './OfficeHoursDialog.module.scss';

interface Props {
  isOpen: boolean;
  onClose: () => void;
  onContinue: () => void;
  userInfo: IUserInfo;
  view?: 'info' | 'actionable';
}

export const OfficeHoursDialog = ({ isOpen, onClose, onContinue, userInfo, view }: Props) => {
  const [dontShowAgain, setDontShowAgain] = useState(false);
  const { mutateAsync: updatePreferences } = useUpdateMemberPreferences();

  const handleContinue = async () => {
    if (view === 'info') {
      onClose();
      return;
    }

    if (dontShowAgain && userInfo?.uid) {
      try {
        await updatePreferences({
          uid: userInfo.uid,
          payload: {
            showOfficeHoursDialog: false,
          },
        });
      } catch (error) {
        console.error('Failed to update preferences:', error);
      }
    }
    onContinue();
  };

  return (
    <AnimatePresence>
      {isOpen && (
        <motion.div
          className={s.overlay}
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          exit={{ opacity: 0 }}
          transition={{ duration: 0.1 }}
          onClick={onClose}
        >
          <motion.div
            className={s.dialog}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 20 }}
            transition={{ duration: 0.2, ease: 'easeOut' }}
            onClick={(e) => e.stopPropagation()}
          >
            <button className={s.closeButton} onClick={onClose}>
              <CloseIcon />
            </button>

            <div className={s.content}>
              <motion.div
                className={s.iconWrapper}
                initial={{ opacity: 0, scale: 0.8 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ delay: 0.1, duration: 0.4, ease: 'easeOut' }}
              >
                <CalendarIcon />
              </motion.div>

              <motion.h2
                className={s.title}
                initial={{ opacity: 0 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.2, duration: 0.4 }}
              >
                What are Office Hours?
              </motion.h2>

              <motion.p
                className={s.description}
                initial={{ opacity: 0 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.3, duration: 0.4 }}
              >
                Office Hours are short (15-30 min) 1:1 meetings where you can connect with experts across the Protocol
                Labs network to discuss real challenges and opportunities.
              </motion.p>

              <div className={s.bestPractices}>
                <h3 className={s.bestPracticesTitle}>Meeting Best Practices:</h3>

                <motion.div
                  className={s.practiceItem}
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: 0.1, duration: 0.3 }}
                >
                  <div className={s.practiceIcon}>
                    <TopicsIcon />
                  </div>
                  <div className={s.practiceContent}>
                    <h4 className={s.practiceTitle}>You can talk about topics like:</h4>
                    <p className={s.practiceText}>
                      Technical decisions, product feedback, growth strategies, fundraising, and company building.
                    </p>
                  </div>
                </motion.div>

                <motion.div
                  className={s.practiceItem}
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: 0.2, duration: 0.3 }}
                >
                  <div className={s.practiceIcon}>
                    <EmailIcon />
                  </div>
                  <div className={s.practiceContent}>
                    <h4 className={s.practiceTitle}>Set context in advance:</h4>
                    <p className={s.practiceText}>
                      If it&apos;s your first time connecting, feel free to email your goals for the session ahead of
                      time.
                    </p>
                  </div>
                </motion.div>

                <motion.div
                  className={s.practiceItem}
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: 0.3, duration: 0.3 }}
                >
                  <div className={s.practiceIcon}>
                    <PreparedIcon />
                  </div>
                  <div className={s.practiceContent}>
                    <h4 className={s.practiceTitle}>Come prepared:</h4>
                    <p className={s.practiceText}>Focus the conversation on a specific challenge or question.</p>
                  </div>
                </motion.div>

                <motion.div
                  className={s.practiceItem}
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: 0.4, duration: 0.3 }}
                >
                  <div className={s.practiceIcon}>
                    <NoSellIcon />
                  </div>
                  <div className={s.practiceContent}>
                    <h4 className={s.practiceTitle}>Don&apos;t pitch or sell:</h4>
                    <p className={s.practiceText}>
                      Unless invited to, keep the meeting focused on collaboration and learning.
                    </p>
                  </div>
                </motion.div>

                <motion.div
                  className={s.practiceItem}
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: 0.5, duration: 0.3 }}
                >
                  <div className={s.practiceIcon}>
                    <ResourcesIcon />
                  </div>
                  <div className={s.practiceContent}>
                    <h4 className={s.practiceTitle}>Ask for intros or resources:</h4>
                    <p className={s.practiceText}>
                      Don&apos;t hesitate to ask for additional support or follow-up suggestions.
                    </p>
                  </div>
                </motion.div>
              </div>

              {view === 'actionable' && (
                <motion.div
                  className={s.checkboxWrapper}
                  initial={{ opacity: 0, y: 10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.6, duration: 0.3 }}
                >
                  <label className={s.checkboxLabel}>
                    <input
                      type="checkbox"
                      checked={dontShowAgain}
                      onChange={(e) => setDontShowAgain(e.target.checked)}
                      className={s.checkbox}
                    />
                    <span className={s.checkboxText}>Don&apos;t show this again</span>
                  </label>
                </motion.div>
              )}

              <div className={s.footer}>
                <motion.button
                  className={s.continueButton}
                  onClick={handleContinue}
                  whileHover={{ scale: 1.02 }}
                  whileTap={{ scale: 0.98 }}
                  transition={{ duration: 0.1 }}
                >
                  {view === 'actionable' ? 'Continue to Schedule Meeting' : 'Close'}
                </motion.button>
              </div>
            </div>
          </motion.div>
        </motion.div>
      )}
    </AnimatePresence>
  );
};

const CloseIcon = () => (
  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M16.2887 14.962C16.4649 15.1381 16.5638 15.377 16.5638 15.626C16.5638 15.8751 16.4649 16.114 16.2887 16.2901C16.1126 16.4662 15.8737 16.5652 15.6247 16.5652C15.3756 16.5652 15.1367 16.4662 14.9606 16.2901L10.0005 11.3284L5.03874 16.2885C4.86261 16.4647 4.62374 16.5636 4.37467 16.5636C4.1256 16.5636 3.88673 16.4647 3.71061 16.2885C3.53449 16.1124 3.43555 15.8735 3.43555 15.6245C3.43555 15.3754 3.53449 15.1365 3.71061 14.9604L8.67233 10.0003L3.71217 5.03854C3.53605 4.86242 3.43711 4.62355 3.43711 4.37448C3.43711 4.12541 3.53605 3.88654 3.71217 3.71042C3.88829 3.53429 4.12716 3.43535 4.37624 3.43535C4.62531 3.43535 4.86418 3.53429 5.0403 3.71042L10.0005 8.67213L14.9622 3.70963C15.1383 3.53351 15.3772 3.43457 15.6262 3.43457C15.8753 3.43457 16.1142 3.53351 16.2903 3.70963C16.4664 3.88575 16.5654 4.12462 16.5654 4.3737C16.5654 4.62277 16.4664 4.86164 16.2903 5.03776L11.3286 10.0003L16.2887 14.962Z"
      fill="#455468"
    />
  </svg>
);

const CalendarIcon = () => (
  <svg width="52" height="52" viewBox="0 0 52 52" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M0 26C0 11.6406 11.6406 0 26 0C40.3594 0 52 11.6406 52 26C52 40.3594 40.3594 52 26 52C11.6406 52 0 40.3594 0 26Z"
      fill="#F2F5FF"
    />
    <path
      d="M36 14H33V13C33 12.7348 32.8946 12.4804 32.7071 12.2929C32.5196 12.1054 32.2652 12 32 12C31.7348 12 31.4804 12.1054 31.2929 12.2929C31.1054 12.4804 31 12.7348 31 13V14H21V13C21 12.7348 20.8946 12.4804 20.7071 12.2929C20.5196 12.1054 20.2652 12 20 12C19.7348 12 19.4804 12.1054 19.2929 12.2929C19.1054 12.4804 19 12.7348 19 13V14H16C15.4696 14 14.9609 14.2107 14.5858 14.5858C14.2107 14.9609 14 15.4696 14 16V36C14 36.5304 14.2107 37.0391 14.5858 37.4142C14.9609 37.7893 15.4696 38 16 38H36C36.5304 38 37.0391 37.7893 37.4142 37.4142C37.7893 37.0391 38 36.5304 38 36V16C38 15.4696 37.7893 14.9609 37.4142 14.5858C37.0391 14.2107 36.5304 14 36 14ZM20.5 33C20.2033 33 19.9133 32.912 19.6666 32.7472C19.42 32.5824 19.2277 32.3481 19.1142 32.074C19.0006 31.7999 18.9709 31.4983 19.0288 31.2074C19.0867 30.9164 19.2296 30.6491 19.4393 30.4393C19.6491 30.2296 19.9164 30.0867 20.2074 30.0288C20.4983 29.9709 20.7999 30.0007 21.074 30.1142C21.3481 30.2277 21.5824 30.42 21.7472 30.6666C21.912 30.9133 22 31.2033 22 31.5C22 31.8978 21.842 32.2794 21.5607 32.5607C21.2794 32.842 20.8978 33 20.5 33ZM26 33C25.7033 33 25.4133 32.912 25.1666 32.7472C24.92 32.5824 24.7277 32.3481 24.6142 32.074C24.5006 31.7999 24.4709 31.4983 24.5288 31.2074C24.5867 30.9164 24.7296 30.6491 24.9393 30.4393C25.1491 30.2296 25.4164 30.0867 25.7074 30.0288C25.9983 29.9709 26.2999 30.0007 26.574 30.1142C26.8481 30.2277 27.0824 30.42 27.2472 30.6666C27.412 30.9133 27.5 31.2033 27.5 31.5C27.5 31.8978 27.342 32.2794 27.0607 32.5607C26.7794 32.842 26.3978 33 26 33ZM26 28C25.7033 28 25.4133 27.912 25.1666 27.7472C24.92 27.5824 24.7277 27.3481 24.6142 27.074C24.5006 26.7999 24.4709 26.4983 24.5288 26.2074C24.5867 25.9164 24.7296 25.6491 24.9393 25.4393C25.1491 25.2296 25.4164 25.0867 25.7074 25.0288C25.9983 24.9709 26.2999 25.0006 26.574 25.1142C26.8481 25.2277 27.0824 25.42 27.2472 25.6666C27.412 25.9133 27.5 26.2033 27.5 26.5C27.5 26.8978 27.342 27.2794 27.0607 27.5607C26.7794 27.842 26.3978 28 26 28ZM31.5 33C31.2033 33 30.9133 32.912 30.6666 32.7472C30.42 32.5824 30.2277 32.3481 30.1142 32.074C30.0007 31.7999 29.9709 31.4983 30.0288 31.2074C30.0867 30.9164 30.2296 30.6491 30.4393 30.4393C30.6491 30.2296 30.9164 30.0867 31.2074 30.0288C31.4983 29.9709 31.7999 30.0007 32.074 30.1142C32.3481 30.2277 32.5824 30.42 32.7472 30.6666C32.912 30.9133 33 31.2033 33 31.5C33 31.8978 32.842 32.2794 32.5607 32.5607C32.2794 32.842 31.8978 33 31.5 33ZM31.5 28C31.2033 28 30.9133 27.912 30.6666 27.7472C30.42 27.5824 30.2277 27.3481 30.1142 27.074C30.0007 26.7999 29.9709 26.4983 30.0288 26.2074C30.0867 25.9164 30.2296 25.6491 30.4393 25.4393C30.6491 25.2296 30.9164 25.0867 31.2074 25.0288C31.4983 24.9709 31.7999 25.0006 32.074 25.1142C32.3481 25.2277 32.5824 25.42 32.7472 25.6666C32.912 25.9133 33 26.2033 33 26.5C33 26.8978 32.842 27.2794 32.5607 27.5607C32.2794 27.842 31.8978 28 31.5 28ZM36 20H16V16H19V17C19 17.2652 19.1054 17.5196 19.2929 17.7071C19.4804 17.8946 19.7348 18 20 18C20.2652 18 20.5196 17.8946 20.7071 17.7071C20.8946 17.5196 21 17.2652 21 17V16H31V17C31 17.2652 31.1054 17.5196 31.2929 17.7071C31.4804 17.8946 31.7348 18 32 18C32.2652 18 32.5196 17.8946 32.7071 17.7071C32.8946 17.5196 33 17.2652 33 17V16H36V20Z"
      fill="#1B4DFF"
    />
  </svg>
);

const TopicsIcon = () => (
  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M7.6875 6C7.6875 5.85082 7.74676 5.70774 7.85225 5.60225C7.95774 5.49676 8.10082 5.4375 8.25 5.4375H20.25C20.3992 5.4375 20.5423 5.49676 20.6477 5.60225C20.7532 5.70774 20.8125 5.85082 20.8125 6C20.8125 6.14918 20.7532 6.29226 20.6477 6.39775C20.5423 6.50324 20.3992 6.5625 20.25 6.5625H8.25C8.10082 6.5625 7.95774 6.50324 7.85225 6.39775C7.74676 6.29226 7.6875 6.14918 7.6875 6ZM20.25 11.4375H8.25C8.10082 11.4375 7.95774 11.4968 7.85225 11.6023C7.74676 11.7077 7.6875 11.8508 7.6875 12C7.6875 12.1492 7.74676 12.2923 7.85225 12.3977C7.95774 12.5032 8.10082 12.5625 8.25 12.5625H20.25C20.3992 12.5625 20.5423 12.5032 20.6477 12.3977C20.7532 12.2923 20.8125 12.1492 20.8125 12C20.8125 11.8508 20.7532 11.7077 20.6477 11.6023C20.5423 11.4968 20.3992 11.4375 20.25 11.4375ZM20.25 17.4375H8.25C8.10082 17.4375 7.95774 17.4968 7.85225 17.6023C7.74676 17.7077 7.6875 17.8508 7.6875 18C7.6875 18.1492 7.74676 18.2923 7.85225 18.3977C7.95774 18.5032 8.10082 18.5625 8.25 18.5625H20.25C20.3992 18.5625 20.5423 18.5032 20.6477 18.3977C20.7532 18.2923 20.8125 18.1492 20.8125 18C20.8125 17.8508 20.7532 17.7077 20.6477 17.6023C20.5423 17.4968 20.3992 17.4375 20.25 17.4375ZM4.125 5.0625C3.93958 5.0625 3.75832 5.11748 3.60415 5.2205C3.44998 5.32351 3.32982 5.46993 3.25886 5.64123C3.18791 5.81254 3.16934 6.00104 3.20551 6.1829C3.24169 6.36475 3.33098 6.5318 3.46209 6.66291C3.5932 6.79402 3.76025 6.88331 3.9421 6.91949C4.12396 6.95566 4.31246 6.93709 4.48377 6.86614C4.65507 6.79518 4.80149 6.67502 4.9045 6.52085C5.00752 6.36668 5.0625 6.18542 5.0625 6C5.0625 5.75136 4.96373 5.5129 4.78791 5.33709C4.6121 5.16127 4.37364 5.0625 4.125 5.0625ZM4.125 17.0625C3.93958 17.0625 3.75832 17.1175 3.60415 17.2205C3.44998 17.3235 3.32982 17.4699 3.25886 17.6412C3.18791 17.8125 3.16934 18.001 3.20551 18.1829C3.24169 18.3648 3.33098 18.5318 3.46209 18.6629C3.5932 18.794 3.76025 18.8833 3.9421 18.9195C4.12396 18.9557 4.31246 18.9371 4.48377 18.8661C4.65507 18.7952 4.80149 18.675 4.9045 18.5208C5.00752 18.3667 5.0625 18.1854 5.0625 18C5.0625 17.7514 4.96373 17.5129 4.78791 17.3371C4.6121 17.1613 4.37364 17.0625 4.125 17.0625ZM4.125 11.0625C3.93958 11.0625 3.75832 11.1175 3.60415 11.2205C3.44998 11.3235 3.32982 11.4699 3.25886 11.6412C3.18791 11.8125 3.16934 12.001 3.20551 12.1829C3.24169 12.3648 3.33098 12.5318 3.46209 12.6629C3.5932 12.794 3.76025 12.8833 3.9421 12.9195C4.12396 12.9557 4.31246 12.9371 4.48377 12.8661C4.65507 12.7952 4.80149 12.675 4.9045 12.5208C5.00752 12.3667 5.0625 12.1854 5.0625 12C5.0625 11.7514 4.96373 11.5129 4.78791 11.3371C4.6121 11.1613 4.37364 11.0625 4.125 11.0625Z"
      fill="#1B4DFF"
    />
  </svg>
);

const EmailIcon = () => (
  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M21 4.6875H3C2.85082 4.6875 2.70774 4.74676 2.60225 4.85225C2.49676 4.95774 2.4375 5.10082 2.4375 5.25V18C2.4375 18.3481 2.57578 18.6819 2.82192 18.9281C3.06806 19.1742 3.4019 19.3125 3.75 19.3125H20.25C20.5981 19.3125 20.9319 19.1742 21.1781 18.9281C21.4242 18.6819 21.5625 18.3481 21.5625 18V5.25C21.5625 5.10082 21.5032 4.95774 21.3977 4.85225C21.2923 4.74676 21.1492 4.6875 21 4.6875ZM19.5544 5.8125L12 12.7369L4.44562 5.8125H19.5544ZM20.25 18.1875H3.75C3.70027 18.1875 3.65258 18.1677 3.61742 18.1326C3.58225 18.0974 3.5625 18.0497 3.5625 18V6.52875L11.625 13.9144C11.7287 14.0092 11.8641 14.0619 12.0047 14.0619C12.1452 14.0619 12.2807 14.0092 12.3844 13.9144L20.4375 6.52875V18C20.4375 18.0497 20.4177 18.0974 20.3826 18.1326C20.3474 18.1677 20.2997 18.1875 20.25 18.1875Z"
      fill="#1B4DFF"
    />
  </svg>
);

const PreparedIcon = () => (
  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M17.8125 14.7591V9.24094C17.813 9.0609 17.7664 8.88388 17.6772 8.72747C17.5881 8.57105 17.4595 8.4407 17.3044 8.34937L12.4913 5.56969C12.3419 5.48355 12.1724 5.4382 12 5.4382C11.8276 5.4382 11.6581 5.48355 11.5087 5.56969L6.69656 8.34937C6.54124 8.44058 6.41251 8.57088 6.3232 8.72731C6.23388 8.88373 6.1871 9.06081 6.1875 9.24094V14.7591C6.187 14.9391 6.23365 15.1161 6.32279 15.2725C6.41194 15.4289 6.54047 15.5593 6.69562 15.6506L11.5087 18.4303C11.6582 18.5163 11.8276 18.5615 12 18.5615C12.1724 18.5615 12.3418 18.5163 12.4913 18.4303L17.3034 15.6506C17.4588 15.5594 17.5875 15.4291 17.6768 15.2727C17.7661 15.1163 17.8129 14.9392 17.8125 14.7591ZM12 6.585L16.1803 9L12 11.4131L7.81969 9L12 6.585ZM7.3125 10.0059L11.4375 12.3872V17.0906L7.3125 14.7075V10.0059ZM12.5625 17.0906V12.3872L16.6875 10.0059V14.7075L12.5625 17.0906ZM21.5625 4.5V8.25C21.5625 8.39918 21.5032 8.54226 21.3977 8.64775C21.2923 8.75324 21.1492 8.8125 21 8.8125C20.8508 8.8125 20.7077 8.75324 20.6023 8.64775C20.4968 8.54226 20.4375 8.39918 20.4375 8.25V5.0625H17.25C17.1008 5.0625 16.9577 5.00324 16.8523 4.89775C16.7468 4.79226 16.6875 4.64918 16.6875 4.5C16.6875 4.35082 16.7468 4.20774 16.8523 4.10225C16.9577 3.99676 17.1008 3.9375 17.25 3.9375H21C21.1492 3.9375 21.2923 3.99676 21.3977 4.10225C21.5032 4.20774 21.5625 4.35082 21.5625 4.5ZM7.3125 19.5C7.3125 19.6492 7.25324 19.7923 7.14775 19.8977C7.04226 20.0032 6.89918 20.0625 6.75 20.0625H3C2.85082 20.0625 2.70774 20.0032 2.60225 19.8977C2.49676 19.7923 2.4375 19.6492 2.4375 19.5V15.75C2.4375 15.6008 2.49676 15.4577 2.60225 15.3523C2.70774 15.2468 2.85082 15.1875 3 15.1875C3.14918 15.1875 3.29226 15.2468 3.39775 15.3523C3.50324 15.4577 3.5625 15.6008 3.5625 15.75V18.9375H6.75C6.89918 18.9375 7.04226 18.9968 7.14775 19.1023C7.25324 19.2077 7.3125 19.3508 7.3125 19.5ZM21.5625 15.75V19.5C21.5625 19.6492 21.5032 19.7923 21.3977 19.8977C21.2923 20.0032 21.1492 20.0625 21 20.0625H17.25C17.1008 20.0625 16.9577 20.0032 16.8523 19.8977C16.7468 19.7923 16.6875 19.6492 16.6875 19.5C16.6875 19.3508 16.7468 19.2077 16.8523 19.1023C16.9577 18.9968 17.1008 18.9375 17.25 18.9375H20.4375V15.75C20.4375 15.6008 20.4968 15.4577 20.6023 15.3523C20.7077 15.2468 20.8508 15.1875 21 15.1875C21.1492 15.1875 21.2923 15.2468 21.3977 15.3523C21.5032 15.4577 21.5625 15.6008 21.5625 15.75ZM2.4375 8.25V4.5C2.4375 4.35082 2.49676 4.20774 2.60225 4.10225C2.70774 3.99676 2.85082 3.9375 3 3.9375H6.75C6.89918 3.9375 7.04226 3.99676 7.14775 4.10225C7.25324 4.20774 7.3125 4.35082 7.3125 4.5C7.3125 4.64918 7.25324 4.79226 7.14775 4.89775C7.04226 5.00324 6.89918 5.0625 6.75 5.0625H3.5625V8.25C3.5625 8.39918 3.50324 8.54226 3.39775 8.64775C3.29226 8.75324 3.14918 8.8125 3 8.8125C2.85082 8.8125 2.70774 8.75324 2.60225 8.64775C2.49676 8.54226 2.4375 8.39918 2.4375 8.25Z"
      fill="#1B4DFF"
    />
  </svg>
);

const NoSellIcon = () => (
  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M20.8125 4.5V7.125C20.8125 7.27418 20.7532 7.41726 20.6477 7.52275C20.5423 7.62824 20.3992 7.6875 20.25 7.6875C20.1008 7.6875 19.9577 7.62824 19.8523 7.52275C19.7468 7.41726 19.6875 7.27418 19.6875 7.125V4.5C19.6875 4.45027 19.6677 4.40258 19.6326 4.36742C19.5974 4.33225 19.5497 4.3125 19.5 4.3125H16.875C16.7258 4.3125 16.5827 4.25324 16.4773 4.14775C16.3718 4.04226 16.3125 3.89918 16.3125 3.75C16.3125 3.60082 16.3718 3.45774 16.4773 3.35225C16.5827 3.24676 16.7258 3.1875 16.875 3.1875H19.5C19.8481 3.1875 20.1819 3.32578 20.4281 3.57192C20.6742 3.81806 20.8125 4.1519 20.8125 4.5ZM20.25 16.3125C20.1008 16.3125 19.9577 16.3718 19.8523 16.4773C19.7468 16.5827 19.6875 16.7258 19.6875 16.875V19.5C19.6875 19.5497 19.6677 19.5974 19.6326 19.6326C19.5974 19.6677 19.5497 19.6875 19.5 19.6875H16.875C16.7258 19.6875 16.5827 19.7468 16.4773 19.8523C16.3718 19.9577 16.3125 20.1008 16.3125 20.25C16.3125 20.3992 16.3718 20.5423 16.4773 20.6477C16.5827 20.7532 16.7258 20.8125 16.875 20.8125H19.5C19.8481 20.8125 20.1819 20.6742 20.4281 20.4281C20.6742 20.1819 20.8125 19.8481 20.8125 19.5V16.875C20.8125 16.7258 20.7532 16.5827 20.6477 16.4773C20.5423 16.3718 20.3992 16.3125 20.25 16.3125ZM7.125 19.6875H4.5C4.45027 19.6875 4.40258 19.6677 4.36742 19.6326C4.33225 19.5974 4.3125 19.5497 4.3125 19.5V16.875C4.3125 16.7258 4.25324 16.5827 4.14775 16.4773C4.04226 16.3718 3.89918 16.3125 3.75 16.3125C3.60082 16.3125 3.45774 16.3718 3.35225 16.4773C3.24676 16.5827 3.1875 16.7258 3.1875 16.875V19.5C3.1875 19.8481 3.32578 20.1819 3.57192 20.4281C3.81806 20.6742 4.1519 20.8125 4.5 20.8125H7.125C7.27418 20.8125 7.41726 20.7532 7.52275 20.6477C7.62824 20.5423 7.6875 20.3992 7.6875 20.25C7.6875 20.1008 7.62824 19.9577 7.52275 19.8523C7.41726 19.7468 7.27418 19.6875 7.125 19.6875ZM3.75 7.6875C3.89918 7.6875 4.04226 7.62824 4.14775 7.52275C4.25324 7.41726 4.3125 7.27418 4.3125 7.125V4.5C4.3125 4.45027 4.33225 4.40258 4.36742 4.36742C4.40258 4.33225 4.45027 4.3125 4.5 4.3125H7.125C7.27418 4.3125 7.41726 4.25324 7.52275 4.14775C7.62824 4.04226 7.6875 3.89918 7.6875 3.75C7.6875 3.60082 7.62824 3.45774 7.52275 3.35225C7.41726 3.24676 7.27418 3.1875 7.125 3.1875H4.5C4.1519 3.1875 3.81806 3.32578 3.57192 3.57192C3.32578 3.81806 3.1875 4.1519 3.1875 4.5V7.125C3.1875 7.27418 3.24676 7.41726 3.35225 7.52275C3.45774 7.62824 3.60082 7.6875 3.75 7.6875ZM16.5 16.3125C16.4127 16.3125 16.3265 16.2922 16.2484 16.2531C16.1703 16.2141 16.1024 16.1574 16.05 16.0875C15.5784 15.4588 14.967 14.9484 14.264 14.597C13.5611 14.2455 12.7859 14.0625 12 14.0625C11.2141 14.0625 10.4389 14.2455 9.73598 14.597C9.03303 14.9484 8.42156 15.4588 7.95 16.0875C7.90568 16.1466 7.85015 16.1964 7.78659 16.234C7.72303 16.2717 7.65268 16.2964 7.57955 16.3068C7.50642 16.3173 7.43196 16.3132 7.3604 16.2949C7.28884 16.2766 7.22159 16.2443 7.1625 16.2C7.10341 16.1557 7.05362 16.1002 7.01598 16.0366C6.97835 15.973 6.9536 15.9027 6.94315 15.8295C6.93271 15.7564 6.93677 15.682 6.9551 15.6104C6.97343 15.5388 7.00568 15.4716 7.05 15.4125C7.75782 14.4637 8.72424 13.7391 9.83344 13.3256C9.24237 12.8728 8.80804 12.2461 8.59149 11.5337C8.37494 10.8213 8.38705 10.059 8.62613 9.35381C8.8652 8.64864 9.31922 8.03611 9.92437 7.60228C10.5295 7.16846 11.2554 6.93516 12 6.93516C12.7446 6.93516 13.4705 7.16846 14.0756 7.60228C14.6808 8.03611 15.1348 8.64864 15.3739 9.35381C15.6129 10.059 15.6251 10.8213 15.4085 11.5337C15.192 12.2461 14.7576 12.8728 14.1666 13.3256C15.2758 13.7391 16.2422 14.4637 16.95 15.4125C17.0127 15.4961 17.0508 15.5954 17.0602 15.6995C17.0696 15.8035 17.0498 15.9081 17.0031 16.0016C16.9564 16.095 16.8846 16.1736 16.7957 16.2285C16.7069 16.2834 16.6045 16.3125 16.5 16.3125ZM12 12.9375C12.4821 12.9375 12.9534 12.7945 13.3542 12.5267C13.755 12.2589 14.0675 11.8782 14.252 11.4328C14.4364 10.9874 14.4847 10.4973 14.3907 10.0245C14.2966 9.55164 14.0645 9.11732 13.7236 8.77643C13.3827 8.43554 12.9484 8.20339 12.4755 8.10934C12.0027 8.01528 11.5126 8.06356 11.0672 8.24804C10.6218 8.43253 10.2411 8.74495 9.97329 9.1458C9.70546 9.54664 9.5625 10.0179 9.5625 10.5C9.5625 11.1465 9.81931 11.7665 10.2764 12.2236C10.7335 12.6807 11.3535 12.9375 12 12.9375Z"
      fill="#1B4DFF"
    />
  </svg>
);

const ResourcesIcon = () => (
  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M12.9375 16.875C12.9375 17.0604 12.8825 17.2417 12.7795 17.3958C12.6765 17.55 12.5301 17.6702 12.3588 17.7411C12.1875 17.8121 11.999 17.8307 11.8171 17.7945C11.6353 17.7583 11.4682 17.669 11.3371 17.5379C11.206 17.4068 11.1167 17.2398 11.0805 17.0579C11.0443 16.876 11.0629 16.6875 11.1339 16.5162C11.2048 16.3449 11.325 16.1985 11.4792 16.0955C11.6333 15.9925 11.8146 15.9375 12 15.9375C12.2486 15.9375 12.4871 16.0363 12.6629 16.2121C12.8387 16.3879 12.9375 16.6264 12.9375 16.875ZM12 6.9375C10.0313 6.9375 8.4375 8.36719 8.4375 10.125V10.5C8.4375 10.6492 8.49677 10.7923 8.60226 10.8977C8.70775 11.0032 8.85082 11.0625 9 11.0625C9.14919 11.0625 9.29226 11.0032 9.39775 10.8977C9.50324 10.7923 9.5625 10.6492 9.5625 10.5V10.125C9.5625 8.98781 10.6556 8.0625 12 8.0625C13.3444 8.0625 14.4375 8.98781 14.4375 10.125C14.4375 11.2622 13.3444 12.1875 12 12.1875C11.8508 12.1875 11.7077 12.2468 11.6023 12.3523C11.4968 12.4577 11.4375 12.6008 11.4375 12.75V13.5C11.4375 13.6492 11.4968 13.7923 11.6023 13.8977C11.7077 14.0032 11.8508 14.0625 12 14.0625C12.1492 14.0625 12.2923 14.0032 12.3978 13.8977C12.5032 13.7923 12.5625 13.6492 12.5625 13.5V13.2731C14.2603 13.0312 15.5625 11.7113 15.5625 10.125C15.5625 8.36719 13.9688 6.9375 12 6.9375ZM21.5625 12C21.5625 13.8913 21.0017 15.7401 19.9509 17.3126C18.9002 18.8852 17.4067 20.1108 15.6594 20.8346C13.9121 21.5584 11.9894 21.7477 10.1345 21.3788C8.27951 21.0098 6.57564 20.099 5.2383 18.7617C3.90096 17.4244 2.99022 15.7205 2.62125 13.8656C2.25227 12.0106 2.44164 10.0879 3.16541 8.34059C3.88917 6.59327 5.11482 5.09981 6.68736 4.04907C8.25991 2.99833 10.1087 2.4375 12 2.4375C14.5352 2.44048 16.9658 3.44891 18.7584 5.24158C20.5511 7.03425 21.5595 9.46478 21.5625 12ZM20.4375 12C20.4375 10.3312 19.9427 8.69992 19.0155 7.31238C18.0884 5.92484 16.7706 4.84338 15.2289 4.20477C13.6871 3.56615 11.9906 3.39906 10.3539 3.72462C8.71722 4.05019 7.2138 4.85378 6.03379 6.03379C4.85379 7.21379 4.05019 8.71721 3.72463 10.3539C3.39907 11.9906 3.56616 13.6871 4.20477 15.2289C4.84338 16.7706 5.92484 18.0884 7.31238 19.0155C8.69992 19.9426 10.3312 20.4375 12 20.4375C14.237 20.435 16.3817 19.5453 17.9635 17.9635C19.5453 16.3817 20.435 14.237 20.4375 12Z"
      fill="#1B4DFF"
    />
  </svg>
);
