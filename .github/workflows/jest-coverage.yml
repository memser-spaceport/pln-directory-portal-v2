name: Jest Coverage for Changed Files

on:
  push:
    branches:
      - feat/unit-testing
  pull_request:
    branches:
      - feat/unit-testing

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for accurate file changes

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Get changed files
      id: changed-files
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          # For pull requests, compare with base branch
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep -E '\.(js|ts|tsx)$' || true)
        else
          # For pushes, get files changed in the last commit
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep -E '\.(js|ts|tsx)$' || true)
        fi
        echo "Changed files: $CHANGED_FILES"
        echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV

    - name: Run tests with coverage for changed files
      if: env.CHANGED_FILES != ''
      run: |
        if [ ! -z "$CHANGED_FILES" ]; then
          echo "Running tests for: $CHANGED_FILES"
          npm test -- --coverage --findRelatedTests $CHANGED_FILES

          # Process each changed file individually
          for file in $CHANGED_FILES; do
            echo "Coverage for $file:"
            echo "-------------------"
            npx jest --coverage --collectCoverageFrom="$file" --coverageReporters=text-summary $file
            echo "-------------------"
          done
        else
          echo "No relevant files changed"
        fi
