'use client';
import { useCommonAnalytics } from '@/analytics/common.analytics';
import { IUserInfo } from '@/types/shared.types';
import { getAnalyticsUserInfo } from '@/utils/common.utils';
import { usePathname } from 'next/navigation';
import React, { memo, useState } from 'react';
import LoginBtn from './login-btn';
import { ApplicationSearch } from '@/components/core/application-search';
import { AccountMenu } from '@/components/core/navbar/components/AccountMenu/AccountMenu';
import { NotificationsMenu } from '@/components/core/navbar/components/NotificationsMenu';
import { useGetAppNotifications } from '@/services/notifications/hooks/useGetAppNotifications';
import { useMemberProfileStatus } from '@/services/members/hooks/useMemberProfileStatus';
import { Signup } from './components/Signup';
import { NavigationMenu } from '@base-ui-components/react';
import NextLink from 'next/link';

import s from './NavBar.module.scss';

interface INavbar {
  userInfo: IUserInfo;
  isLoggedIn: boolean;
  authToken: string;
}

function Navbar(props: Readonly<INavbar>) {
  const pathName = usePathname();
  const userInfo = props?.userInfo;
  const isLoggedIn = props?.isLoggedIn;
  const analytics = useCommonAnalytics();
  const authToken = props?.authToken;
  const [showNotifications, setShowNotifications] = useState(false);

  const closeNavigationMenu = () => {
    setTimeout(() => {
      const escapeEvent = new KeyboardEvent('keydown', {
        key: 'Escape',
        code: 'Escape',
        keyCode: 27,
        which: 27,
        bubbles: true,
        cancelable: true,
      });
      document.dispatchEvent(escapeEvent);

      setTimeout(() => {
        const stillOpen = document.querySelectorAll('[data-state="open"]');
        if (stillOpen.length > 0) {
          const clickEvent = new MouseEvent('click', {
            view: window,
            bubbles: true,
            cancelable: true,
            clientX: 0,
            clientY: 0,
          });
          document.body.dispatchEvent(clickEvent);
        }
      }, 100);
    }, 50);
  };

  const onNavItemClickHandler = (url: string, name: string) => {
    if (pathName !== url) {
      analytics.onNavItemClicked(name, getAnalyticsUserInfo(userInfo));
    }
    closeNavigationMenu();
  };

  const onNavbarApplogoClicked = () => {
    analytics.onAppLogoClicked();
    closeNavigationMenu();
  };

  const { data: notifications } = useGetAppNotifications(userInfo.uid, authToken);

  const { data: profileStatus } = useMemberProfileStatus(userInfo?.uid);

  return (
    <NavigationMenu.Root className={s.Root}>
      <NavigationMenu.List className={s.List}>
        <Link href="/home" onClick={onNavbarApplogoClicked} className={s.logoWrapper}>
          <AppLogo />
        </Link>
        <NavigationMenu.Item>
          <Link className={s.Trigger} href="/members" onClick={() => onNavItemClickHandler('/members', 'Members')}>
            <MembersIcon /> Members
          </Link>
        </NavigationMenu.Item>
        <NavigationMenu.Item>
          <Link className={s.Trigger} href="/teams" onClick={() => onNavItemClickHandler('/teams', 'Teams')}>
            <TeamsIcon /> Teams
          </Link>
        </NavigationMenu.Item>
        <NavigationMenu.Item>
          <Link className={s.Trigger} href="/events" onClick={() => onNavItemClickHandler('/events', 'Events')}>
            <EventsIcon /> Events
          </Link>
        </NavigationMenu.Item>
        <NavigationMenu.Item>
          <Link className={s.Trigger} href="/forum?cid=0" onClick={() => onNavItemClickHandler('/forum', 'Forum')}>
            <ForumIcon /> Forum
          </Link>
        </NavigationMenu.Item>
        <NavigationMenu.Item>
          <NavigationMenu.Trigger className={s.Trigger}>
            <OtherIcon /> Other
            <NavigationMenu.Icon className={s.Icon}>
              <ChevronDownIcon />
            </NavigationMenu.Icon>
          </NavigationMenu.Trigger>
          <NavigationMenu.Content className={s.Content}>
            <ul className={s.GridLinkList}>
              {/* General Items */}
              {otherLinks
                .filter((item) => item.category === 'general')
                .map((item) => (
                  <li key={item.href}>
                    <Link className={s.LinkCard} href={item.href} onClick={() => onNavItemClickHandler(item.href, item.title)}>
                      {item.icon}
                      <div className={s.linkDetails}>
                        <h3 className={s.LinkTitle}>{item.title}</h3>
                        {/*<p className={s.LinkDescription}>{item.description}</p>*/}
                      </div>
                    </Link>
                  </li>
                ))}

              {/* Fundraising Section */}
              {otherLinks.some((item) => item.category === 'fundraising') && (
                <>
                  <li className={s.CategorySeparator}>
                    <div className={s.CategoryLabel}>Fundraising</div>
                  </li>
                  {otherLinks
                    .filter((item) => item.category === 'fundraising')
                    .map((item) => (
                      <li key={item.href}>
                        <Link className={s.LinkCard} href={item.href} onClick={() => onNavItemClickHandler(item.href, item.title)}>
                          {item.icon}
                          <div className={s.linkDetails}>
                            <h3 className={s.LinkTitle}>{item.title}</h3>
                            {/*<p className={s.LinkDescription}>{item.description}</p>*/}
                          </div>
                        </Link>
                      </li>
                    ))}
                </>
              )}
            </ul>
          </NavigationMenu.Content>
        </NavigationMenu.Item>
        <div className={s.right}>
          <NotificationsMenu isMobileView notifications={notifications} open={showNotifications} onClose={() => setShowNotifications(false)} userInfo={userInfo} />
          <ApplicationSearch isLoggedIn={isLoggedIn} userInfo={userInfo} authToken={authToken} />
          {isLoggedIn && <AccountMenu userInfo={userInfo} authToken={authToken} isLoggedIn profileFilledPercent={profileStatus?.completeness} />}
          {!isLoggedIn && (
            <>
              <a target="_blank" href={process.env.GET_SUPPORT_URL ?? ''} className={s.IconTrigger}>
                <HelpIcon />
              </a>
              <div className={s.signInWrapper}>
                <Signup />
                <LoginBtn />
              </div>
            </>
          )}
        </div>
      </NavigationMenu.List>
      <NavigationMenu.Portal>
        <NavigationMenu.Positioner className={s.Positioner} sideOffset={10} collisionPadding={{ top: 5, bottom: 5, left: 20, right: 20 }}>
          <NavigationMenu.Popup className={s.Popup}>
            <NavigationMenu.Viewport className={s.Viewport} />
          </NavigationMenu.Popup>
        </NavigationMenu.Positioner>
      </NavigationMenu.Portal>
    </NavigationMenu.Root>
  );
}

export default memo(Navbar);

function Link(props: NavigationMenu.Link.Props) {
  return (
    <NavigationMenu.Link
      render={() => (
        <NextLink href={props.href ?? ''} className={(props.className as string) ?? ''} onClick={props.onClick}>
          {props.children}
        </NextLink>
      )}
      {...props}
    />
  );
}

function ChevronDownIcon(props: React.ComponentProps<'svg'>) {
  return (
    <svg width="10" height="10" viewBox="0 0 10 10" fill="none" {...props}>
      <path d="M1 3.5L5 7.5L9 3.5" stroke="currentcolor" strokeWidth="1.5" />
    </svg>
  );
}

const TeamsIcon = () => (
  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M15 7C15 7.79565 14.6839 8.55871 14.1213 9.12132C13.5587 9.68393 12.7956 10 12 10C11.2044 10 10.4413 9.68393 9.87868 9.12132C9.31607 8.55871 9 7.79565 9 7C9 6.20435 9.31607 5.44129 9.87868 4.87868C10.4413 4.31607 11.2044 4 12 4C12.7956 4 13.5587 4.31607 14.1213 4.87868C14.6839 5.44129 15 6.20435 15 7ZM20 9C20 9.53043 19.7893 10.0391 19.4142 10.4142C19.0391 10.7893 18.5304 11 18 11C17.4696 11 16.9609 10.7893 16.5858 10.4142C16.2107 10.0391 16 9.53043 16 9C16 8.46957 16.2107 7.96086 16.5858 7.58579C16.9609 7.21071 17.4696 7 18 7C18.5304 7 19.0391 7.21071 19.4142 7.58579C19.7893 7.96086 20 8.46957 20 9ZM16 16C16 14.9391 15.5786 13.9217 14.8284 13.1716C14.0783 12.4214 13.0609 12 12 12C10.9391 12 9.92172 12.4214 9.17157 13.1716C8.42143 13.9217 8 14.9391 8 16V19H16V16ZM8 9C8 9.53043 7.78929 10.0391 7.41421 10.4142C7.03914 10.7893 6.53043 11 6 11C5.46957 11 4.96086 10.7893 4.58579 10.4142C4.21071 10.0391 4 9.53043 4 9C4 8.46957 4.21071 7.96086 4.58579 7.58579C4.96086 7.21071 5.46957 7 6 7C6.53043 7 7.03914 7.21071 7.41421 7.58579C7.78929 7.96086 8 8.46957 8 9ZM18 19V16C18.0014 14.9833 17.7433 13.983 17.25 13.094C17.6933 12.9805 18.1568 12.9698 18.6049 13.0627C19.053 13.1556 19.474 13.3496 19.8357 13.6299C20.1974 13.9102 20.4903 14.2695 20.6921 14.6802C20.8939 15.091 20.9992 15.5424 21 16V19H18ZM6.75 13.094C6.25675 13.983 5.9986 14.9833 6 16V19H3V16C2.99981 15.542 3.10446 15.0901 3.30595 14.6789C3.50743 14.2676 3.80039 13.9079 4.16238 13.6274C4.52437 13.3469 4.94578 13.153 5.39431 13.0605C5.84284 12.9681 6.30658 12.9795 6.75 13.094Z"
      fill="currentColor"
    />
  </svg>
);

const MembersIcon = () => (
  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M12 10C12.7956 10 13.5587 9.68393 14.1213 9.12132C14.6839 8.55871 15 7.79565 15 7C15 6.20435 14.6839 5.44129 14.1213 4.87868C13.5587 4.31607 12.7956 4 12 4C11.2044 4 10.4413 4.31607 9.87868 4.87868C9.31607 5.44129 9 6.20435 9 7C9 7.79565 9.31607 8.55871 9.87868 9.12132C10.4413 9.68393 11.2044 10 12 10ZM5 19C5 18.0807 5.18106 17.1705 5.53284 16.3212C5.88463 15.4719 6.40024 14.7003 7.05025 14.0503C7.70026 13.4002 8.47194 12.8846 9.32122 12.5328C10.1705 12.1811 11.0807 12 12 12C12.9193 12 13.8295 12.1811 14.6788 12.5328C15.5281 12.8846 16.2997 13.4002 16.9497 14.0503C17.5998 14.7003 18.1154 15.4719 18.4672 16.3212C18.8189 17.1705 19 18.0807 19 19H5Z"
      fill="currentColor"
    />
  </svg>
);

const ProjectsIcon = () => (
  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M15 12.2992V7.70078C15.0004 7.52335 14.9543 7.34892 14.8663 7.19486C14.7783 7.04079 14.6515 6.91246 14.4984 6.82266L10.4875 4.50625C10.3393 4.42068 10.1711 4.37562 10 4.37562C9.82885 4.37562 9.66072 4.42068 9.5125 4.50625L5.50234 6.82266C5.34918 6.91236 5.2222 7.04065 5.13406 7.19472C5.04592 7.34879 4.99969 7.52328 5 7.70078V12.2992C4.99961 12.4766 5.04572 12.6511 5.13372 12.8051C5.22172 12.9592 5.34854 13.0875 5.50156 13.1773L9.5125 15.4938C9.66074 15.5792 9.82887 15.6243 10 15.6243C10.1711 15.6243 10.3393 15.5792 10.4875 15.4938L14.4977 13.1773C14.6508 13.0876 14.7778 12.9594 14.8659 12.8053C14.9541 12.6512 15.0003 12.4767 15 12.2992ZM10 5.66797L13.1711 7.5L10 9.33047L6.82891 7.5L10 5.66797ZM6.25 8.60859L9.375 10.4133V13.9711L6.25 12.1664V8.60859ZM10.625 13.9711V10.4133L13.75 8.60859V12.1664L10.625 13.9711ZM18.125 3.75V6.875C18.125 7.04076 18.0592 7.19973 17.9419 7.31694C17.8247 7.43415 17.6658 7.5 17.5 7.5C17.3342 7.5 17.1753 7.43415 17.0581 7.31694C16.9408 7.19973 16.875 7.04076 16.875 6.875V4.375H14.375C14.2092 4.375 14.0503 4.30915 13.9331 4.19194C13.8158 4.07473 13.75 3.91576 13.75 3.75C13.75 3.58424 13.8158 3.42527 13.9331 3.30806C14.0503 3.19085 14.2092 3.125 14.375 3.125H17.5C17.6658 3.125 17.8247 3.19085 17.9419 3.30806C18.0592 3.42527 18.125 3.58424 18.125 3.75ZM6.25 16.25C6.25 16.4158 6.18415 16.5747 6.06694 16.6919C5.94973 16.8092 5.79076 16.875 5.625 16.875H2.5C2.33424 16.875 2.17527 16.8092 2.05806 16.6919C1.94085 16.5747 1.875 16.4158 1.875 16.25V13.125C1.875 12.9592 1.94085 12.8003 2.05806 12.6831C2.17527 12.5658 2.33424 12.5 2.5 12.5C2.66576 12.5 2.82473 12.5658 2.94194 12.6831C3.05915 12.8003 3.125 12.9592 3.125 13.125V15.625H5.625C5.79076 15.625 5.94973 15.6908 6.06694 15.8081C6.18415 15.9253 6.25 16.0842 6.25 16.25ZM18.125 13.125V16.25C18.125 16.4158 18.0592 16.5747 17.9419 16.6919C17.8247 16.8092 17.6658 16.875 17.5 16.875H14.375C14.2092 16.875 14.0503 16.8092 13.9331 16.6919C13.8158 16.5747 13.75 16.4158 13.75 16.25C13.75 16.0842 13.8158 15.9253 13.9331 15.8081C14.0503 15.6908 14.2092 15.625 14.375 15.625H16.875V13.125C16.875 12.9592 16.9408 12.8003 17.0581 12.6831C17.1753 12.5658 17.3342 12.5 17.5 12.5C17.6658 12.5 17.8247 12.5658 17.9419 12.6831C18.0592 12.8003 18.125 12.9592 18.125 13.125ZM1.875 6.875V3.75C1.875 3.58424 1.94085 3.42527 2.05806 3.30806C2.17527 3.19085 2.33424 3.125 2.5 3.125H5.625C5.79076 3.125 5.94973 3.19085 6.06694 3.30806C6.18415 3.42527 6.25 3.58424 6.25 3.75C6.25 3.91576 6.18415 4.07473 6.06694 4.19194C5.94973 4.30915 5.79076 4.375 5.625 4.375H3.125V6.875C3.125 7.04076 3.05915 7.19973 2.94194 7.31694C2.82473 7.43415 2.66576 7.5 2.5 7.5C2.33424 7.5 2.17527 7.43415 2.05806 7.31694C1.94085 7.19973 1.875 7.04076 1.875 6.875Z"
      fill="#455468"
    />
  </svg>
);

const EventsIcon = () => (
  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clipPath="url(#clip0_3785_16476)">
      <g clipPath="url(#clip1_3785_16476)">
        <path
          d="M10 11.6666C9.76389 11.6666 9.56611 11.5866 9.40667 11.4266C9.24667 11.2672 9.16667 11.0694 9.16667 10.8333C9.16667 10.5972 9.24667 10.3991 9.40667 10.2391C9.56611 10.0797 9.76389 9.99996 10 9.99996C10.2361 9.99996 10.4342 10.0797 10.5942 10.2391C10.7536 10.3991 10.8333 10.5972 10.8333 10.8333C10.8333 11.0694 10.7536 11.2672 10.5942 11.4266C10.4342 11.5866 10.2361 11.6666 10 11.6666ZM6.66667 11.6666C6.43056 11.6666 6.2325 11.5866 6.0725 11.4266C5.91306 11.2672 5.83333 11.0694 5.83333 10.8333C5.83333 10.5972 5.91306 10.3991 6.0725 10.2391C6.2325 10.0797 6.43056 9.99996 6.66667 9.99996C6.90278 9.99996 7.10083 10.0797 7.26083 10.2391C7.42028 10.3991 7.5 10.5972 7.5 10.8333C7.5 11.0694 7.42028 11.2672 7.26083 11.4266C7.10083 11.5866 6.90278 11.6666 6.66667 11.6666ZM13.3333 11.6666C13.0972 11.6666 12.8994 11.5866 12.74 11.4266C12.58 11.2672 12.5 11.0694 12.5 10.8333C12.5 10.5972 12.58 10.3991 12.74 10.2391C12.8994 10.0797 13.0972 9.99996 13.3333 9.99996C13.5694 9.99996 13.7672 10.0797 13.9267 10.2391C14.0867 10.3991 14.1667 10.5972 14.1667 10.8333C14.1667 11.0694 14.0867 11.2672 13.9267 11.4266C13.7672 11.5866 13.5694 11.6666 13.3333 11.6666ZM10 15C9.76389 15 9.56611 14.92 9.40667 14.76C9.24667 14.6005 9.16667 14.4027 9.16667 14.1666C9.16667 13.9305 9.24667 13.7327 9.40667 13.5733C9.56611 13.4133 9.76389 13.3333 10 13.3333C10.2361 13.3333 10.4342 13.4133 10.5942 13.5733C10.7536 13.7327 10.8333 13.9305 10.8333 14.1666C10.8333 14.4027 10.7536 14.6005 10.5942 14.76C10.4342 14.92 10.2361 15 10 15ZM6.66667 15C6.43056 15 6.2325 14.92 6.0725 14.76C5.91306 14.6005 5.83333 14.4027 5.83333 14.1666C5.83333 13.9305 5.91306 13.7327 6.0725 13.5733C6.2325 13.4133 6.43056 13.3333 6.66667 13.3333C6.90278 13.3333 7.10083 13.4133 7.26083 13.5733C7.42028 13.7327 7.5 13.9305 7.5 14.1666C7.5 14.4027 7.42028 14.6005 7.26083 14.76C7.10083 14.92 6.90278 15 6.66667 15ZM13.3333 15C13.0972 15 12.8994 14.92 12.74 14.76C12.58 14.6005 12.5 14.4027 12.5 14.1666C12.5 13.9305 12.58 13.7327 12.74 13.5733C12.8994 13.4133 13.0972 13.3333 13.3333 13.3333C13.5694 13.3333 13.7672 13.4133 13.9267 13.5733C14.0867 13.7327 14.1667 13.9305 14.1667 14.1666C14.1667 14.4027 14.0867 14.6005 13.9267 14.76C13.7672 14.92 13.5694 15 13.3333 15ZM4.16667 18.3333C3.70833 18.3333 3.31583 18.1702 2.98917 17.8441C2.66306 17.5175 2.5 17.125 2.5 16.6666V4.99996C2.5 4.54163 2.66306 4.1494 2.98917 3.82329C3.31583 3.49663 3.70833 3.33329 4.16667 3.33329H5V2.49996C5 2.26385 5.07972 2.06579 5.23917 1.90579C5.39917 1.74635 5.59722 1.66663 5.83333 1.66663C6.06944 1.66663 6.2675 1.74635 6.4275 1.90579C6.58694 2.06579 6.66667 2.26385 6.66667 2.49996V3.33329H13.3333V2.49996C13.3333 2.26385 13.4133 2.06579 13.5733 1.90579C13.7328 1.74635 13.9306 1.66663 14.1667 1.66663C14.4028 1.66663 14.6006 1.74635 14.76 1.90579C14.92 2.06579 15 2.26385 15 2.49996V3.33329H15.8333C16.2917 3.33329 16.6842 3.49663 17.0108 3.82329C17.3369 4.1494 17.5 4.54163 17.5 4.99996V16.6666C17.5 17.125 17.3369 17.5175 17.0108 17.8441C16.6842 18.1702 16.2917 18.3333 15.8333 18.3333H4.16667ZM4.16667 16.6666H15.8333V8.33329H4.16667V16.6666Z"
          fill="#475569"
        />
      </g>
    </g>
    <defs>
      <clipPath id="clip0_3785_16476">
        <rect width="20" height="20" fill="white" />
      </clipPath>
      <clipPath id="clip1_3785_16476">
        <rect width="20" height="20" fill="white" />
      </clipPath>
    </defs>
  </svg>
);

const ForumIcon = () => (
  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M20.25 7.5H17.25V4.5C17.25 4.10218 17.092 3.72064 16.8107 3.43934C16.5294 3.15804 16.1478 3 15.75 3H3.75C3.35218 3 2.97064 3.15804 2.68934 3.43934C2.40804 3.72064 2.25 4.10218 2.25 4.5V16.5C2.25044 16.6411 2.29068 16.7792 2.36608 16.8985C2.44149 17.0177 2.54901 17.1133 2.67629 17.1742C2.80358 17.2351 2.94546 17.2589 3.08564 17.2428C3.22581 17.2266 3.3586 17.1713 3.46875 17.0831L6.75 14.4375V17.25C6.75 17.6478 6.90804 18.0294 7.18934 18.3107C7.47064 18.592 7.85218 18.75 8.25 18.75H17.0241L20.5312 21.5831C20.664 21.6905 20.8293 21.7493 21 21.75C21.1989 21.75 21.3897 21.671 21.5303 21.5303C21.671 21.3897 21.75 21.1989 21.75 21V9C21.75 8.60218 21.592 8.22064 21.3107 7.93934C21.0294 7.65804 20.6478 7.5 20.25 7.5ZM6.23906 12.9169L3.75 14.9297V4.5H15.75V12.75H6.71063C6.53897 12.75 6.37252 12.8089 6.23906 12.9169ZM20.25 19.4297L17.7609 17.4169C17.6282 17.3095 17.4629 17.2507 17.2922 17.25H8.25V14.25H15.75C16.1478 14.25 16.5294 14.092 16.8107 13.8107C17.092 13.5294 17.25 13.1478 17.25 12.75V9H20.25V19.4297Z"
      fill="currentColor"
    />
  </svg>
);

const OtherIcon = () => (
  <svg width="18" height="19" viewBox="0 0 18 19" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g filter="url(#filter0_d_7102_15954)">
      <path
        d="M5.48438 2.53125C4.9003 2.53125 4.32935 2.70445 3.84371 3.02894C3.35807 3.35344 2.97956 3.81465 2.75604 4.35426C2.53253 4.89388 2.47405 5.48765 2.58799 6.0605C2.70194 6.63335 2.9832 7.15955 3.3962 7.57255C3.8092 7.98555 4.3354 8.26681 4.90825 8.38076C5.4811 8.49471 6.07488 8.43622 6.61449 8.21271C7.1541 7.98919 7.61532 7.61068 7.93981 7.12504C8.2643 6.63941 8.4375 6.06845 8.4375 5.48438C8.4375 4.70116 8.12637 3.95002 7.57255 3.3962C7.01873 2.84238 6.26759 2.53125 5.48438 2.53125ZM5.48438 6.75C5.23406 6.75 4.98936 6.67577 4.78123 6.53671C4.5731 6.39764 4.41088 6.19997 4.31509 5.96871C4.2193 5.73745 4.19424 5.48297 4.24307 5.23747C4.2919 4.99196 4.41244 4.76645 4.58944 4.58944C4.76645 4.41244 4.99196 4.2919 5.23747 4.24307C5.48297 4.19424 5.73745 4.2193 5.96871 4.31509C6.19997 4.41088 6.39764 4.5731 6.53671 4.78123C6.67577 4.98936 6.75 5.23406 6.75 5.48438C6.75 5.82004 6.61666 6.14196 6.37931 6.37931C6.14196 6.61666 5.82004 6.75 5.48438 6.75ZM12.5156 8.4375C13.0997 8.4375 13.6707 8.2643 14.1563 7.93981C14.6419 7.61532 15.0204 7.1541 15.244 6.61449C15.4675 6.07488 15.526 5.4811 15.412 4.90825C15.2981 4.3354 15.0168 3.8092 14.6038 3.3962C14.1908 2.9832 13.6646 2.70194 13.0918 2.58799C12.5189 2.47405 11.9251 2.53253 11.3855 2.75604C10.8459 2.97956 10.3847 3.35807 10.0602 3.84371C9.7357 4.32935 9.5625 4.9003 9.5625 5.48438C9.5625 6.26759 9.87363 7.01873 10.4275 7.57255C10.9813 8.12637 11.7324 8.4375 12.5156 8.4375ZM12.5156 4.21875C12.7659 4.21875 13.0106 4.29298 13.2188 4.43205C13.4269 4.57112 13.5891 4.76878 13.6849 5.00004C13.7807 5.23131 13.8058 5.48578 13.7569 5.73129C13.7081 5.9768 13.5876 6.20231 13.4106 6.37931C13.2336 6.55631 13.008 6.67685 12.7625 6.72568C12.517 6.77452 12.2626 6.74945 12.0313 6.65366C11.8 6.55787 11.6024 6.39565 11.4633 6.18752C11.3242 5.97939 11.25 5.73469 11.25 5.48438C11.25 5.14871 11.3833 4.8268 11.6207 4.58944C11.858 4.35209 12.18 4.21875 12.5156 4.21875ZM5.48438 9.5625C4.9003 9.5625 4.32935 9.7357 3.84371 10.0602C3.35807 10.3847 2.97956 10.8459 2.75604 11.3855C2.53253 11.9251 2.47405 12.5189 2.58799 13.0918C2.70194 13.6646 2.9832 14.1908 3.3962 14.6038C3.8092 15.0168 4.3354 15.2981 4.90825 15.412C5.4811 15.526 6.07488 15.4675 6.61449 15.244C7.1541 15.0204 7.61532 14.6419 7.93981 14.1563C8.2643 13.6707 8.4375 13.0997 8.4375 12.5156C8.4375 11.7324 8.12637 10.9813 7.57255 10.4275C7.01873 9.87363 6.26759 9.5625 5.48438 9.5625ZM5.48438 13.7813C5.23406 13.7813 4.98936 13.707 4.78123 13.568C4.5731 13.4289 4.41088 13.2312 4.31509 13C4.2193 12.7687 4.19424 12.5142 4.24307 12.2687C4.2919 12.0232 4.41244 11.7977 4.58944 11.6207C4.76645 11.4437 4.99196 11.3232 5.23747 11.2743C5.48297 11.2255 5.73745 11.2505 5.96871 11.3463C6.19997 11.4421 6.39764 11.6044 6.53671 11.8125C6.67577 12.0206 6.75 12.2653 6.75 12.5156C6.75 12.8513 6.61666 13.1732 6.37931 13.4106C6.14196 13.6479 5.82004 13.7813 5.48438 13.7813ZM15.4688 12.5156C15.4688 12.7394 15.3799 12.954 15.2216 13.1122C15.0634 13.2705 14.8488 13.3594 14.625 13.3594H13.3594V14.625C13.3594 14.8488 13.2705 15.0634 13.1122 15.2216C12.954 15.3799 12.7394 15.4688 12.5156 15.4688C12.2919 15.4688 12.0772 15.3799 11.919 15.2216C11.7608 15.0634 11.6719 14.8488 11.6719 14.625V13.3594H10.4063C10.1825 13.3594 9.96786 13.2705 9.80963 13.1122C9.6514 12.954 9.5625 12.7394 9.5625 12.5156C9.5625 12.2919 9.6514 12.0772 9.80963 11.919C9.96786 11.7608 10.1825 11.6719 10.4063 11.6719H11.6719V10.4063C11.6719 10.1825 11.7608 9.96786 11.919 9.80963C12.0772 9.6514 12.2919 9.5625 12.5156 9.5625C12.7394 9.5625 12.954 9.6514 13.1122 9.80963C13.2705 9.96786 13.3594 10.1825 13.3594 10.4063V11.6719H14.625C14.8488 11.6719 15.0634 11.7608 15.2216 11.919C15.3799 12.0772 15.4688 12.2919 15.4688 12.5156Z"
        fill="#455468"
      />
    </g>
    <defs>
      <filter id="filter0_d_7102_15954" x="-2" y="-1" width="22" height="22" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
        <feFlood floodOpacity="0" result="BackgroundImageFix" />
        <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
        <feOffset dy="1" />
        <feGaussianBlur stdDeviation="1" />
        <feComposite in2="hardAlpha" operator="out" />
        <feColorMatrix type="matrix" values="0 0 0 0 0.054902 0 0 0 0 0.0588235 0 0 0 0 0.0666667 0 0 0 0.06 0" />
        <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_7102_15954" />
        <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_7102_15954" result="shape" />
      </filter>
    </defs>
  </svg>
);

const AppLogo = () => (
  <svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M39.9824 13.8291C40.161 13.7268 40.3906 13.8548 40.3906 14.085V31.6504C40.3906 31.8548 40.2888 32.0335 40.1104 32.1357L24.9072 40.8291C24.7288 40.9569 24.4993 40.804 24.499 40.5996V33.0566C24.499 32.8521 24.6007 32.6726 24.7793 32.5703L32.917 27.8916C33.0954 27.7893 33.1972 27.6106 33.1973 27.4062L33.1719 18.0225C33.1974 17.8179 33.3 17.6394 33.4785 17.5371L39.9824 13.8291ZM15.749 28.9912C15.749 28.7613 15.9787 28.6334 16.1572 28.7607L22.7393 32.5449C22.9177 32.6472 23.0195 32.8268 23.0195 33.0312V40.5996C23.0192 40.8039 22.7898 40.9313 22.6113 40.8291L16.0303 37.0449C15.8517 36.9427 15.7491 36.7641 15.749 36.5596V28.9912ZM7 13.9062C7 13.7017 7.25515 13.5479 7.4082 13.6758L22.7393 22.4199C22.9177 22.5733 23.0449 22.7526 23.0449 22.957L23.0195 30.6279C23.0193 30.8066 22.8404 30.8577 22.7129 30.8066L14.6777 26.2041C14.4992 26.1022 14.2695 26.2302 14.2695 26.4346V35.5107C14.2695 35.7152 14.0154 35.8687 13.8623 35.7412L7.28027 32.0078C7.10199 31.9055 7 31.7268 7 31.5225V13.9062ZM31.2842 18.8154C31.4627 18.6876 31.6922 18.8405 31.6924 19.0449V26.7158C31.6923 26.818 31.6409 26.9198 31.5645 26.9453L24.9072 30.7559C24.7287 30.8835 24.4991 30.7299 24.499 30.5254V22.9824C24.4991 22.7781 24.601 22.5992 24.7793 22.5225L31.2842 18.8154ZM14.7295 8.07617C14.9078 7.99967 15.1116 7.99967 15.3154 8.07617L30.6465 16.8203C30.825 16.9226 30.825 17.2044 30.6465 17.3066L24.1416 21.0391C23.9631 21.1413 23.7596 21.1413 23.5811 21.0391L8.25 12.2949C8.09701 12.1926 8.09702 11.9119 8.25 11.8096L14.7295 8.07617ZM32.2021 8.07617C32.3807 7.97393 32.5851 7.97399 32.7637 8.07617L39.3701 11.8603C39.5487 11.9626 39.5487 12.2444 39.3701 12.3467L32.8145 16.0791C32.636 16.1812 32.4324 16.1812 32.2539 16.0791L25.6465 12.2949C25.4684 12.1925 25.4684 11.912 25.6465 11.8096L32.2021 8.07617Z"
      fill="#0F172A"
    />
  </svg>
);

function HelpIcon(props: React.ComponentProps<'svg'>) {
  return (
    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M10.9375 14.0625C10.9375 14.2479 10.8825 14.4292 10.7795 14.5833C10.6765 14.7375 10.5301 14.8577 10.3588 14.9286C10.1875 14.9996 9.99896 15.0182 9.81711 14.982C9.63525 14.9458 9.4682 14.8565 9.33709 14.7254C9.20598 14.5943 9.11669 14.4273 9.08052 14.2454C9.04434 14.0635 9.06291 13.875 9.13387 13.7037C9.20482 13.5324 9.32499 13.386 9.47916 13.283C9.63333 13.18 9.81458 13.125 10 13.125C10.2486 13.125 10.4871 13.2238 10.6629 13.3996C10.8387 13.5754 10.9375 13.8139 10.9375 14.0625ZM10 5.625C8.27657 5.625 6.875 6.88672 6.875 8.4375V8.75C6.875 8.91576 6.94085 9.07473 7.05806 9.19194C7.17527 9.30915 7.33424 9.375 7.5 9.375C7.66576 9.375 7.82473 9.30915 7.94195 9.19194C8.05916 9.07473 8.125 8.91576 8.125 8.75V8.4375C8.125 7.57812 8.96641 6.875 10 6.875C11.0336 6.875 11.875 7.57812 11.875 8.4375C11.875 9.29688 11.0336 10 10 10C9.83424 10 9.67527 10.0658 9.55806 10.1831C9.44085 10.3003 9.375 10.4592 9.375 10.625V11.25C9.375 11.4158 9.44085 11.5747 9.55806 11.6919C9.67527 11.8092 9.83424 11.875 10 11.875C10.1658 11.875 10.3247 11.8092 10.4419 11.6919C10.5592 11.5747 10.625 11.4158 10.625 11.25V11.1937C12.05 10.932 13.125 9.79531 13.125 8.4375C13.125 6.88672 11.7234 5.625 10 5.625ZM18.125 10C18.125 11.607 17.6485 13.1779 16.7557 14.514C15.8629 15.8502 14.594 16.8916 13.1093 17.5065C11.6247 18.1215 9.99099 18.2824 8.41489 17.9689C6.8388 17.6554 5.39106 16.8815 4.25476 15.7452C3.11846 14.6089 2.34463 13.1612 2.03112 11.5851C1.71762 10.009 1.87852 8.37535 2.49348 6.8907C3.10844 5.40605 4.14985 4.1371 5.486 3.24431C6.82214 2.35152 8.39303 1.875 10 1.875C12.1542 1.87727 14.2195 2.73403 15.7427 4.25727C17.266 5.78051 18.1227 7.84581 18.125 10ZM16.875 10C16.875 8.64025 16.4718 7.31104 15.7164 6.18045C14.9609 5.04987 13.8872 4.16868 12.631 3.64833C11.3747 3.12798 9.99238 2.99183 8.65876 3.2571C7.32514 3.52237 6.10013 4.17715 5.13864 5.13864C4.17716 6.10013 3.52238 7.32513 3.2571 8.65875C2.99183 9.99237 3.12798 11.3747 3.64833 12.6309C4.16868 13.8872 5.04987 14.9609 6.18046 15.7164C7.31105 16.4718 8.64026 16.875 10 16.875C11.8227 16.8729 13.5702 16.1479 14.8591 14.8591C16.1479 13.5702 16.8729 11.8227 16.875 10Z"
        fill="#455468"
      />
    </svg>
  );
}

const FundraisingIcon = () => (
  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M19.375 10C19.3757 9.28224 19.1997 8.57535 18.8627 7.94164C18.5257 7.30793 18.0379 6.76688 17.4424 6.36618C16.8469 5.96548 16.162 5.71745 15.448 5.64395C14.734 5.57045 14.0129 5.67375 13.3483 5.94472C12.6836 6.2157 12.0959 6.64604 11.6368 7.1978C11.1778 7.74956 10.8615 8.40579 10.7159 9.10862C10.5704 9.81146 10.5999 10.5393 10.8021 11.228C11.0042 11.9167 11.3727 12.5451 11.875 13.0578V17.5C11.8749 17.6066 11.9021 17.7114 11.954 17.8046C12.0058 17.8977 12.0807 17.976 12.1713 18.032C12.262 18.0881 12.3655 18.12 12.4719 18.1248C12.5784 18.1296 12.6844 18.1071 12.7797 18.0594L15 16.9484L17.2203 18.0594C17.3156 18.1071 17.4216 18.1296 17.5281 18.1248C17.6345 18.12 17.738 18.0881 17.8287 18.032C17.9193 17.976 17.9942 17.8977 18.046 17.8046C18.0979 17.7114 18.1251 17.6066 18.125 17.5V13.0578C18.9266 12.2419 19.3755 11.1438 19.375 10ZM15 6.875C15.6181 6.875 16.2223 7.05828 16.7362 7.40166C17.2501 7.74504 17.6506 8.2331 17.8871 8.80411C18.1236 9.37513 18.1855 10.0035 18.065 10.6097C17.9444 11.2158 17.6467 11.7727 17.2097 12.2097C16.7727 12.6467 16.2158 12.9444 15.6097 13.065C15.0035 13.1855 14.3751 13.1236 13.8041 12.8871C13.2331 12.6506 12.745 12.2501 12.4017 11.7362C12.0583 11.2223 11.875 10.6181 11.875 10C11.875 9.1712 12.2042 8.37634 12.7903 7.79029C13.3763 7.20424 14.1712 6.875 15 6.875ZM15.2797 15.6906C15.1929 15.6472 15.0971 15.6246 15 15.6246C14.9029 15.6246 14.8071 15.6472 14.7203 15.6906L13.125 16.4891V13.9523C13.7109 14.2306 14.3514 14.375 15 14.375C15.6486 14.375 16.2891 14.2306 16.875 13.9523V16.4891L15.2797 15.6906ZM10.625 15C10.625 15.1658 10.5592 15.3247 10.4419 15.4419C10.3247 15.5592 10.1658 15.625 10 15.625H3.125C2.79348 15.625 2.47554 15.4933 2.24112 15.2589C2.0067 15.0245 1.875 14.7065 1.875 14.375V4.375C1.875 4.04348 2.0067 3.72554 2.24112 3.49112C2.47554 3.2567 2.79348 3.125 3.125 3.125H16.875C17.2065 3.125 17.5245 3.2567 17.7589 3.49112C17.9933 3.72554 18.125 4.04348 18.125 4.375C18.125 4.54076 18.0592 4.69973 17.9419 4.81694C17.8247 4.93415 17.6658 5 17.5 5C17.3342 5 17.1753 4.93415 17.0581 4.81694C16.9408 4.69973 16.875 4.54076 16.875 4.375H3.125V14.375H10C10.1658 14.375 10.3247 14.4408 10.4419 14.5581C10.5592 14.6753 10.625 14.8342 10.625 15ZM9.375 10.625C9.375 10.7908 9.30915 10.9497 9.19194 11.0669C9.07473 11.1842 8.91576 11.25 8.75 11.25H5.625C5.45924 11.25 5.30027 11.1842 5.18306 11.0669C5.06585 10.9497 5 10.7908 5 10.625C5 10.4592 5.06585 10.3003 5.18306 10.1831C5.30027 10.0658 5.45924 10 5.625 10H8.75C8.91576 10 9.07473 10.0658 9.19194 10.1831C9.30915 10.3003 9.375 10.4592 9.375 10.625ZM9.375 8.125C9.375 8.29076 9.30915 8.44973 9.19194 8.56694C9.07473 8.68415 8.91576 8.75 8.75 8.75H5.625C5.45924 8.75 5.30027 8.68415 5.18306 8.56694C5.06585 8.44973 5 8.29076 5 8.125C5 7.95924 5.06585 7.80027 5.18306 7.68306C5.30027 7.56585 5.45924 7.5 5.625 7.5H8.75C8.91576 7.5 9.07473 7.56585 9.19194 7.68306C9.30915 7.80027 9.375 7.95924 9.375 8.125Z"
      fill="#455468"
    />
  </svg>
);

const DemoIcon = () => (
  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M16.25 2.5H14.375V1.875C14.375 1.70924 14.3092 1.55027 14.1919 1.43306C14.0747 1.31585 13.9158 1.25 13.75 1.25C13.5842 1.25 13.4253 1.31585 13.3081 1.43306C13.1908 1.55027 13.125 1.70924 13.125 1.875V2.5H6.875V1.875C6.875 1.70924 6.80915 1.55027 6.69194 1.43306C6.57473 1.31585 6.41576 1.25 6.25 1.25C6.08424 1.25 5.92527 1.31585 5.80806 1.43306C5.69085 1.55027 5.625 1.70924 5.625 1.875V2.5H3.75C3.41848 2.5 3.10054 2.6317 2.86612 2.86612C2.6317 3.10054 2.5 3.41848 2.5 3.75V16.25C2.5 16.5815 2.6317 16.8995 2.86612 17.1339C3.10054 17.3683 3.41848 17.5 3.75 17.5H16.25C16.5815 17.5 16.8995 17.3683 17.1339 17.1339C17.3683 16.8995 17.5 16.5815 17.5 16.25V3.75C17.5 3.41848 17.3683 3.10054 17.1339 2.86612C16.8995 2.6317 16.5815 2.5 16.25 2.5ZM16.25 16.25H3.75V3.75H5.625V4.375C5.625 4.54076 5.69085 4.69973 5.80806 4.81694C5.92527 4.93415 6.08424 5 6.25 5C6.41576 5 6.57473 4.93415 6.69194 4.81694C6.80915 4.69973 6.875 4.54076 6.875 4.375V3.75H13.125V4.375C13.125 4.54076 13.1908 4.69973 13.3081 4.81694C13.4253 4.93415 13.5842 5 13.75 5C13.9158 5 14.0747 4.93415 14.1919 4.81694C14.3092 4.69973 14.375 4.54076 14.375 4.375V3.75H16.25V16.25ZM13.7984 8.87812L11.4672 8.69766L10.5742 6.62734C10.526 6.51506 10.4459 6.41939 10.3438 6.35217C10.2417 6.28495 10.1222 6.24912 10 6.24912C9.87779 6.24912 9.75826 6.28495 9.6562 6.35217C9.55415 6.41939 9.47403 6.51506 9.42578 6.62734L8.53281 8.69766L6.20156 8.87812C6.0775 8.8879 5.95918 8.9345 5.86176 9.01194C5.76434 9.08938 5.69225 9.19414 5.65474 9.3128C5.61723 9.43147 5.616 9.55862 5.6512 9.67799C5.68641 9.79736 5.75644 9.9035 5.85234 9.98281L7.61172 11.4352L7.07578 13.6C7.0464 13.7194 7.05287 13.8447 7.09439 13.9604C7.1359 14.0761 7.2106 14.177 7.30916 14.2505C7.40772 14.324 7.52575 14.3667 7.64849 14.3734C7.77123 14.3802 7.89323 14.3505 7.99922 14.2883L10 13.1109L12.0008 14.2883C12.1068 14.3505 12.2288 14.3802 12.3515 14.3734C12.4742 14.3667 12.5923 14.324 12.6908 14.2505C12.7894 14.177 12.8641 14.0761 12.9056 13.9604C12.9471 13.8447 12.9536 13.7194 12.9242 13.6L12.3883 11.4352L14.1477 9.98281C14.2436 9.9035 14.3136 9.79736 14.3488 9.67799C14.384 9.55862 14.3828 9.43147 14.3453 9.3128C14.3077 9.19414 14.2357 9.08938 14.1382 9.01194C14.0408 8.9345 13.9225 8.8879 13.7984 8.87812ZM11.2898 10.7219C11.1989 10.7968 11.131 10.8959 11.094 11.0077C11.0569 11.1195 11.0523 11.2395 11.0805 11.3539L11.3539 12.457L10.3172 11.8469C10.2211 11.7903 10.1116 11.7604 10 11.7604C9.88845 11.7604 9.77893 11.7903 9.68281 11.8469L8.64609 12.457L8.91953 11.3539C8.94774 11.2395 8.94306 11.1195 8.90601 11.0077C8.86897 10.8959 8.80107 10.7968 8.71016 10.7219L7.84219 10.0047L9.00547 9.91484C9.11895 9.90613 9.22789 9.8666 9.32055 9.80052C9.41321 9.73443 9.48606 9.6443 9.53125 9.53984L10 8.45234L10.4688 9.53984C10.5139 9.6443 10.5868 9.73443 10.6795 9.80052C10.7721 9.8666 10.8811 9.90613 10.9945 9.91484L12.1578 10.0047L11.2898 10.7219Z"
      fill="#455468"
    />
  </svg>
);

const otherLinks = [
  {
    icon: <ProjectsIcon />,
    href: '/projects',
    title: 'Projects',
    // description: 'See what the network is building',
    category: 'general',
  },
  {
    icon: <FundraisingIcon />,
    href: '/fundraising/teams',
    title: 'Team Fundraising Profile',
    // description: 'Showcase your team for fundraising opportunities',
    category: 'fundraising',
  },
  {
    icon: <DemoIcon />,
    href: '/fundraising/demo-days',
    title: 'Demo Days',
    // description: 'Present your project to investors and community',
    category: 'fundraising',
  },
] as const;
