import React, { useMemo } from 'react';

import s from './FineTuneMatches.module.scss';
import { MatchesSelector } from '@/components/page/recommendations/components/MatchesSelector';
import { useTeamsFormOptions } from '@/services/teams/hooks/useTeamsFormOptions';
import { useFormContext } from 'react-hook-form';
import { TRecommendationsSettingsForm } from '@/components/page/recommendations/components/RecommendationsSettingsForm/types';
import { useMemberRolesOptions } from '@/services/members/hooks/useMemberRolesOptions';
import { MatchesEditor } from '@/components/page/recommendations/components/MatchesEditor';

export const FineTuneMatches = () => {
  const { data } = useTeamsFormOptions();
  const { data: rolesData } = useMemberRolesOptions();
  const { getValues } = useFormContext<TRecommendationsSettingsForm>();
  const { roles, fundingStage, teamTechnology, keywords, enabled } = getValues();
  const isInvalid = !fundingStage.length && !teamTechnology.length && !keywords.length && !roles.length && enabled;

  const options = useMemo(() => {
    if (!data) {
      return {
        industryTagsOptions: [],
        fundingStageOptions: [],
        teamTechnologiesOptions: [],
      };
    }

    return {
      industryTagsOptions: data.industryTags.map((val: { id: any; name: any }) => ({
        value: val.name,
        label: val.name,
      })),
      fundingStageOptions: data.fundingStage.map((val: { id: any; name: any }) => ({
        value: val.name,
        label: val.name,
      })),
      teamTechnologiesOptions: data.technologies.map((val: { id: any; name: any }) => ({
        value: val.name,
        label: val.name,
      })),
    };
  }, [data]);

  const rolesOptions = useMemo(() => {
    if (!rolesData) {
      return [];
    }

    return rolesData.map((val: { role: string }) => ({
      value: val.role,
      label: val.role,
    }));
  }, [rolesData]);

  return (
    <div className={s.Collapsible}>
      {isInvalid && (
        <div className={s.warningStrip}>
          <WarningIcon /> You need to edit at least 1 setting to receive recommendations
        </div>
      )}
      <div className={s.Trigger}>Fine-tune matches</div>
      <div className={s.Panel}>
        <MatchesEditor
          selectLabel="Select keywords"
          hint="Used to match you with members with similar keywords in their profiles."
          icon={<KeyIcon />}
          title="Keywords"
          name="keywords"
          warning={isInvalid && !keywords.length}
        />
        <MatchesSelector
          placeholder="Add funding stage"
          hint="Used to match you with members on the teams at funding stage(s) of your interest."
          icon={<LeafIcon />}
          selectLabel="Select stage"
          title="Funding Stage"
          options={options.fundingStageOptions}
          name="fundingStage"
          warning={isInvalid && !fundingStage.length}
        />
        <MatchesSelector
          placeholder="Add role"
          hint="We’ll prioritize members who match these roles."
          icon={<RoleIcon />}
          title="Preferred Roles"
          selectLabel="Select Role"
          options={rolesOptions}
          name="roles"
          warning={isInvalid && !roles.length}
        />
        <MatchesSelector
          placeholder="Add technology used"
          hint="We’ll highlight members working with these technologies."
          icon={<TechIcon />}
          title="Technologies used"
          selectLabel="Select Technology"
          options={options.teamTechnologiesOptions}
          name="teamTechnology"
          warning={isInvalid && !teamTechnology.length}
        />
      </div>
    </div>
  );
};

function WarningIcon(props: React.ComponentProps<'svg'>) {
  return (
    <svg width="15" height="13" viewBox="0 0 15 13" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M7.5 0.625C7.88281 0.625 8.23828 0.84375 8.42969 1.17188L14.3359 11.2344C14.5273 11.5898 14.5273 12 14.3359 12.3281C14.1445 12.6836 13.7891 12.875 13.4062 12.875H1.59375C1.18359 12.875 0.828125 12.6836 0.636719 12.3281C0.445312 12 0.445312 11.5898 0.636719 11.2344L6.54297 1.17188C6.73438 0.84375 7.08984 0.625 7.5 0.625ZM7.5 4.125C7.11719 4.125 6.84375 4.42578 6.84375 4.78125V7.84375C6.84375 8.22656 7.11719 8.5 7.5 8.5C7.85547 8.5 8.15625 8.22656 8.15625 7.84375V4.78125C8.15625 4.42578 7.85547 4.125 7.5 4.125ZM8.375 10.25C8.375 9.78516 7.96484 9.375 7.5 9.375C7.00781 9.375 6.625 9.78516 6.625 10.25C6.625 10.7422 7.00781 11.125 7.5 11.125C7.96484 11.125 8.375 10.7422 8.375 10.25Z"
        fill="#0F172A"
      />
    </svg>
  );
}

function ChevronDownIcon(props: React.ComponentProps<'svg'>) {
  return (
    <svg width="10" height="10" viewBox="0 0 10 10" fill="none" {...props}>
      <path d="M1 3.5L5 7.5L9 3.5" stroke="currentcolor" strokeWidth="1.5" />
    </svg>
  );
}

function TechIcon(props: React.ComponentProps<'svg'>) {
  return (
    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M8.95236 14.6876C8.72215 15.6559 8.14444 16.5061 7.32887 17.0767C6.51331 17.6472 5.51665 17.8986 4.52804 17.7829C3.53943 17.6673 2.62768 17.1927 1.96581 16.4493C1.30395 15.7059 0.938036 14.7454 0.937517 13.7501C0.934954 12.8703 1.22061 12.0139 1.7508 11.3118C1.82319 11.2094 1.91539 11.1226 2.02193 11.0565C2.12848 10.9903 2.2472 10.9463 2.37108 10.9269C2.49496 10.9074 2.62147 10.9131 2.74314 10.9434C2.8648 10.9738 2.97914 11.0282 3.07939 11.1035C3.17964 11.1788 3.26376 11.2735 3.32678 11.3819C3.38979 11.4903 3.43042 11.6103 3.44626 11.7346C3.46209 11.859 3.45282 11.9853 3.41898 12.1061C3.38513 12.2268 3.32741 12.3395 3.24924 12.4376C2.9642 12.8156 2.81081 13.2766 2.81252 13.7501C2.81252 14.3302 3.04298 14.8866 3.45322 15.2969C3.86346 15.7071 4.41986 15.9376 5.00002 15.9376C5.58018 15.9376 6.13658 15.7071 6.54681 15.2969C6.95705 14.8866 7.18752 14.3302 7.18752 13.7501C7.18752 13.5014 7.28629 13.263 7.4621 13.0871C7.63792 12.9113 7.87638 12.8126 8.12502 12.8126H15C15.2487 12.8126 15.4871 12.9113 15.6629 13.0871C15.8387 13.263 15.9375 13.5014 15.9375 13.7501C15.9375 13.9987 15.8387 14.2372 15.6629 14.413C15.4871 14.5888 15.2487 14.6876 15 14.6876H8.95236ZM4.50861 14.5485C4.61346 14.613 4.73 14.6563 4.85156 14.6758C4.97313 14.6953 5.09735 14.6906 5.21712 14.6621C5.3369 14.6336 5.44988 14.5818 5.54963 14.5096C5.64937 14.4374 5.73393 14.3463 5.79845 14.2415L9.15783 8.7774C9.22237 8.67255 9.26562 8.55602 9.28512 8.43445C9.30462 8.31288 9.29998 8.18866 9.27147 8.06889C9.24295 7.94911 9.19113 7.83613 9.11895 7.73638C9.04677 7.63664 8.95565 7.55209 8.8508 7.48756C8.55862 7.30755 8.31289 7.06133 8.13347 6.76879C7.95406 6.47625 7.84598 6.14561 7.81799 5.80358C7.79 5.46154 7.84287 5.11772 7.97233 4.7999C8.10179 4.48208 8.30421 4.19918 8.56323 3.97406C8.82225 3.74895 9.13061 3.58793 9.46337 3.50402C9.79613 3.42012 10.144 3.41568 10.4788 3.49107C10.8135 3.56646 11.1259 3.71956 11.3906 3.938C11.6553 4.15644 11.8648 4.43408 12.0024 4.7485C12.0509 4.86226 12.1216 4.96528 12.2101 5.05162C12.2987 5.13797 12.4035 5.20593 12.5185 5.25158C12.6335 5.29724 12.7563 5.3197 12.88 5.31765C13.0037 5.31561 13.1257 5.28911 13.2391 5.23968C13.3525 5.19025 13.455 5.11887 13.5407 5.02965C13.6264 4.94042 13.6936 4.83513 13.7384 4.71982C13.7832 4.60452 13.8047 4.48149 13.8018 4.35783C13.7988 4.23416 13.7714 4.1123 13.7211 3.99928C13.4814 3.45241 13.1241 2.96511 12.6747 2.57204C12.2252 2.17898 11.6946 1.88983 11.1207 1.72516C10.5467 1.5605 9.94356 1.52438 9.35407 1.61936C8.76459 1.71434 8.20328 1.9381 7.71012 2.27471C7.21695 2.61131 6.80405 3.05249 6.50079 3.56684C6.19754 4.08118 6.01139 4.65605 5.9556 5.25053C5.89981 5.84501 5.97574 6.44448 6.178 7.00627C6.38026 7.56806 6.70387 8.07835 7.1258 8.50084L4.19845 13.2587C4.13405 13.3637 4.09099 13.4804 4.07172 13.6021C4.05246 13.7238 4.05737 13.8481 4.08617 13.9679C4.11498 14.0877 4.16711 14.2006 4.2396 14.3002C4.31208 14.3999 4.4035 14.4842 4.50861 14.5485ZM15 9.68756C14.5673 9.68739 14.1374 9.7565 13.7266 9.89225L10.7985 5.13287C10.6681 4.92111 10.459 4.7698 10.2171 4.71222C9.97523 4.65464 9.72037 4.69551 9.50861 4.82584C9.29685 4.95617 9.14554 5.16528 9.08796 5.40717C9.03038 5.64907 9.07125 5.90392 9.20158 6.11568L12.561 11.579C12.6255 11.6839 12.7101 11.7751 12.8099 11.8474C12.9097 11.9196 13.0228 11.9715 13.1426 12C13.2625 12.0285 13.3868 12.0331 13.5084 12.0136C13.6301 11.994 13.7467 11.9507 13.8516 11.886C14.1395 11.7092 14.4645 11.6015 14.801 11.5713C15.1375 11.5411 15.4765 11.5893 15.7913 11.7121C16.1061 11.8349 16.3881 12.029 16.6153 12.279C16.8426 12.5291 17.0088 12.8284 17.1009 13.1535C17.193 13.4786 17.2086 13.8206 17.1464 14.1527C17.0842 14.4848 16.946 14.798 16.7424 15.0677C16.5389 15.3374 16.2757 15.5563 15.9734 15.7072C15.6711 15.8582 15.3379 15.937 15 15.9376C14.7514 15.9376 14.5129 16.0363 14.3371 16.2121C14.1613 16.388 14.0625 16.6264 14.0625 16.8751C14.0625 17.1237 14.1613 17.3622 14.3371 17.538C14.5129 17.7138 14.7514 17.8126 15 17.8126C16.0775 17.8126 17.1108 17.3845 17.8726 16.6227C18.6345 15.8608 19.0625 14.8275 19.0625 13.7501C19.0625 12.6726 18.6345 11.6393 17.8726 10.8774C17.1108 10.1156 16.0775 9.68756 15 9.68756Z"
        fill="currentColor"
      />
    </svg>
  );
}

const RoleIcon = () => (
  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M11.9142 12.2289C12.8337 11.506 13.505 10.5144 13.8347 9.39216C14.1643 8.26992 14.1359 7.07283 13.7534 5.96748C13.3709 4.86213 12.6534 3.9035 11.7006 3.225C10.7479 2.5465 9.60734 2.18188 8.43768 2.18188C7.26802 2.18188 6.12746 2.5465 5.17471 3.225C4.22196 3.9035 3.50441 4.86213 3.12193 5.96748C2.73944 7.07283 2.71105 8.26992 3.04069 9.39216C3.37033 10.5144 4.04161 11.506 4.96112 12.2289C3.48231 12.8321 2.17557 13.7915 1.15721 15.0219C0.997252 15.2123 0.919488 15.4584 0.941026 15.7062C0.962563 15.9539 1.08164 16.183 1.27205 16.343C1.46247 16.5029 1.70863 16.5807 1.95639 16.5591C2.20414 16.5376 2.43319 16.4185 2.59315 16.2281C4.10487 14.4289 6.18065 13.4375 8.43768 13.4375C11.3283 13.4375 13.2127 14.9547 14.2822 16.2281C14.4422 16.4185 14.6712 16.5376 14.919 16.5591C15.1667 16.5807 15.4129 16.5029 15.6033 16.343C15.7937 16.183 15.9128 15.9539 15.9343 15.7062C15.9559 15.4584 15.8781 15.2123 15.7181 15.0219C14.6998 13.7915 13.3931 12.8321 11.9142 12.2289ZM4.68768 7.81248C4.68768 7.0708 4.90761 6.34578 5.31967 5.7291C5.73172 5.11241 6.31739 4.63176 7.00262 4.34794C7.68784 4.06411 8.44184 3.98985 9.16927 4.13454C9.8967 4.27923 10.5649 4.63639 11.0893 5.16083C11.6138 5.68528 11.9709 6.35347 12.1156 7.0809C12.2603 7.80832 12.1861 8.56232 11.9022 9.24755C11.6184 9.93277 11.1378 10.5184 10.5211 10.9305C9.90438 11.3426 9.17936 11.5625 8.43768 11.5625C7.44343 11.5615 6.49021 11.166 5.78717 10.463C5.08413 9.75996 4.68871 8.80673 4.68768 7.81248ZM18.9635 11.0336L18.7049 11.118L18.8611 11.3383C18.9375 11.4376 18.9933 11.5512 19.025 11.6724C19.0568 11.7936 19.064 11.9199 19.0461 12.0439C19.0282 12.168 18.9856 12.2871 18.9209 12.3944C18.8561 12.5017 18.7705 12.5949 18.6692 12.6685C18.5678 12.7422 18.4527 12.7948 18.3306 12.8232C18.2086 12.8516 18.0821 12.8552 17.9586 12.8339C17.8352 12.8126 17.7172 12.7667 17.6118 12.699C17.5063 12.6313 17.4155 12.5432 17.3447 12.4398L17.1877 12.2195L17.0314 12.4398C16.9606 12.5432 16.8698 12.6313 16.7644 12.699C16.6589 12.7667 16.541 12.8126 16.4175 12.8339C16.294 12.8552 16.1675 12.8516 16.0455 12.8232C15.9235 12.7948 15.8083 12.7422 15.707 12.6685C15.6056 12.5949 15.52 12.5017 15.4553 12.3944C15.3905 12.2871 15.348 12.168 15.3301 12.0439C15.3122 11.9199 15.3193 11.7936 15.3511 11.6724C15.3829 11.5512 15.4386 11.4376 15.515 11.3383L15.6713 11.118L15.4127 11.0336C15.1805 10.9534 14.989 10.7852 14.8795 10.5653C14.77 10.3453 14.7512 10.0912 14.8272 9.85756C14.9032 9.62392 15.0678 9.42944 15.2857 9.31596C15.5036 9.20247 15.7574 9.17907 15.9924 9.25077L16.251 9.33436V9.06248C16.251 8.81384 16.3497 8.57539 16.5255 8.39957C16.7014 8.22376 16.9398 8.12498 17.1885 8.12498C17.4371 8.12498 17.6756 8.22376 17.8514 8.39957C18.0272 8.57539 18.126 8.81384 18.126 9.06248V9.33436L18.3846 9.25077C18.6195 9.17907 18.8733 9.20247 19.0912 9.31596C19.3091 9.42944 19.4737 9.62392 19.5497 9.85756C19.6257 10.0912 19.6069 10.3453 19.4974 10.5653C19.3879 10.7852 19.1965 10.9534 18.9642 11.0336H18.9635Z"
      fill="currentColor"
    />
  </svg>
);

const KeyIcon = () => (
  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M12.5 0.9375C11.4805 0.938091 10.4751 1.17608 9.56347 1.63261C8.65186 2.08914 7.85908 2.75168 7.24793 3.56773C6.63678 4.38379 6.22405 5.33094 6.04243 6.33417C5.86081 7.3374 5.91529 8.36914 6.20156 9.34766L1.83672 13.7117C1.74969 13.7988 1.68067 13.9023 1.63362 14.0161C1.58657 14.1299 1.5624 14.2518 1.5625 14.375V17.5C1.5625 17.7486 1.66127 17.9871 1.83709 18.1629C2.0129 18.3387 2.25136 18.4375 2.5 18.4375H5.625C5.87364 18.4375 6.1121 18.3387 6.28791 18.1629C6.46373 17.9871 6.5625 17.7486 6.5625 17.5V16.5625H7.5C7.74864 16.5625 7.9871 16.4637 8.16291 16.2879C8.33873 16.1121 8.4375 15.8736 8.4375 15.625V14.6875H9.375C9.49815 14.6876 9.62011 14.6634 9.73392 14.6164C9.84773 14.5693 9.95115 14.5003 10.0383 14.4133L10.6523 13.7984C11.5548 14.0625 12.5034 14.1295 13.434 13.995C14.3646 13.8605 15.2554 13.5276 16.0461 13.0188C16.8368 12.5101 17.509 11.8373 18.0171 11.0462C18.5251 10.255 18.8573 9.36391 18.991 8.43321C19.1247 7.50251 19.0569 6.55395 18.792 5.65176C18.5272 4.74956 18.0716 3.91481 17.4561 3.20402C16.8406 2.49323 16.0795 1.92301 15.2245 1.53196C14.3694 1.14092 13.4403 0.93819 12.5 0.9375ZM12.5 12.1875C11.9089 12.1888 11.3229 12.0774 10.7734 11.8594C10.6011 11.7855 10.4106 11.765 10.2265 11.8005C10.0423 11.836 9.87311 11.9259 9.74063 12.0586L8.98438 12.8125H7.5C7.25136 12.8125 7.0129 12.9113 6.83709 13.0871C6.66127 13.2629 6.5625 13.5014 6.5625 13.75V14.6875H5.625C5.37636 14.6875 5.1379 14.7863 4.96209 14.9621C4.78627 15.1379 4.6875 15.3764 4.6875 15.625V16.5625H3.4375V14.7656L7.94141 10.2617C8.07393 10.1293 8.16374 9.9602 8.19925 9.77625C8.23476 9.5923 8.21434 9.40192 8.14062 9.22969C7.77068 8.29788 7.70924 7.27201 7.96531 6.3027C8.22139 5.3334 8.7815 4.47173 9.5634 3.84422C10.3453 3.21671 11.3078 2.85643 12.3095 2.81626C13.3113 2.7761 14.2995 3.05817 15.1292 3.62107C15.9588 4.18397 16.5861 4.99802 16.9189 5.94372C17.2518 6.88941 17.2727 7.91691 16.9785 8.87534C16.6844 9.83378 16.0907 10.6727 15.2846 11.2688C14.4785 11.8649 13.5026 12.1869 12.5 12.1875ZM15.3125 5.9375C15.3125 6.18473 15.2392 6.4264 15.1018 6.63196C14.9645 6.83752 14.7693 6.99774 14.5409 7.09235C14.3124 7.18696 14.0611 7.21171 13.8186 7.16348C13.5762 7.11525 13.3534 6.9962 13.1786 6.82138C13.0038 6.64657 12.8847 6.42384 12.8365 6.18136C12.7883 5.93889 12.813 5.68755 12.9076 5.45915C13.0023 5.23074 13.1625 5.03551 13.368 4.89816C13.5736 4.76081 13.8153 4.6875 14.0625 4.6875C14.394 4.6875 14.712 4.8192 14.9464 5.05362C15.1808 5.28804 15.3125 5.60598 15.3125 5.9375Z"
      fill="currentColor"
    />
  </svg>
);

const LeafIcon = () => (
  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M17.7661 3.114C17.7527 2.88465 17.6555 2.6682 17.4931 2.50574C17.3306 2.34329 17.1142 2.24614 16.8848 2.23275C13.7911 2.05072 11.0575 2.41556 8.75983 3.31634C6.56139 4.17806 4.86686 5.514 3.85749 7.17962C2.48092 9.45384 2.4778 12.2148 3.82233 14.8507L2.46061 16.2124C2.3734 16.2996 2.30423 16.4032 2.25703 16.5171C2.20984 16.6311 2.18555 16.7532 2.18555 16.8765C2.18555 16.9998 2.20984 17.1219 2.25703 17.2359C2.30423 17.3498 2.3734 17.4534 2.46061 17.5406C2.63673 17.7167 2.8756 17.8156 3.12467 17.8156C3.248 17.8156 3.37012 17.7913 3.48406 17.7441C3.598 17.6969 3.70153 17.6278 3.78874 17.5406L5.15045 16.1788C6.45827 16.846 7.79733 17.1827 9.09186 17.1827C10.4071 17.1868 11.6979 16.8272 12.8215 16.1437C14.4872 15.1343 15.8231 13.439 16.6848 11.2413C17.5833 8.94212 17.9481 6.20775 17.7661 3.114ZM11.8473 14.5374C10.2778 15.4882 8.43639 15.5601 6.5567 14.7656L13.1614 8.16087C13.2486 8.07367 13.3178 7.97014 13.365 7.8562C13.4122 7.74226 13.4365 7.62014 13.4365 7.49681C13.4365 7.37348 13.4122 7.25136 13.365 7.13742C13.3178 7.02348 13.2486 6.91996 13.1614 6.83275C13.0742 6.74554 12.9707 6.67637 12.8567 6.62917C12.7428 6.58198 12.6207 6.55769 12.4973 6.55769C12.374 6.55769 12.2519 6.58198 12.1379 6.62917C12.024 6.67637 11.9205 6.74554 11.8333 6.83275L5.23327 13.4421C4.44108 11.5671 4.51295 9.72103 5.46764 8.1515C7.10124 5.45384 10.9786 3.95462 15.9364 4.06947C16.0442 9.02572 14.545 12.9038 11.8473 14.5374Z"
      fill="currentColor"
    />
  </svg>
);
